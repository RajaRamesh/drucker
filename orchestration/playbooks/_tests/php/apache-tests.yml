---
- name: "TEST: Apache needs to be correctly installed"
  stat:
    path: "{{ item }}"
  with_items:
    - "{{ apache_security_conf }}"
    - "{{ apache_actions_mod }}"
    - "{{ apache_rewrite_mod }}"
    - "{{ apache_proxy_http_mod }}"
  register: apache
  failed_when: apache.stat.exists == false

- name: "TEST: Check if Apache and web tools are installed"
  shell: dpkg -l | grep {{ item }}
  with_items:
    - apache2
    - apache2-utils
    - goaccess
  register: apache_packages
  changed_when: apache_packages == ''

- name: "TEST: APACHE_RUN_USER should be set"
  shell: grep -o "export APACHE_RUN_USER={{ user }}" {{ apache_envvars }} || echo "absent"
  register: apache_run_user
  changed_when: apache_run_user.stdout == "absent"
  failed_when: apache_run_user.stdout == "absent"

- name: "TEST: Web server group should be added to the drucker user"
  shell: groups {{ user }} | awk '{print $NF}'
  register: group_check
  changed_when: group_check.stdout != "{{ apache_user }}"
  failed_when: group_check.stdout != "{{ apache_user }}"

- name: "TEST: The POODLE SSL v3 vulnerability should be fixed"
  shell: grep -o "SSLProtocol all -SSLv2 -SSLv3" {{ apache_ssl_mod }} || echo "absent"
  register: poodle
  changed_when: poodle.stdout == "absent"
  failed_when: poodle.stdout == "absent"

- name: "TEST: apache2 service needs to be started"
  command: service apache2 status | grep -o "is running"
  args:
    warn: no
  register: apache2_service
  changed_when: apache2_service.stdout == "is running"
  failed_when: apache2_service.stdout == "is running"

- name: "TEST: Permissions should be correct in the webroot"
  shell: stat -c %U:%G "{{ item }}" | grep "{{ user }}:{{ apache_user }}" || echo "Wrong permissions"
  with_items:
    - "{{ drucker_site }}"
    - "{{ adminer_root }}"
    - "{{ phpmyadmin_root }}"
    - "{{ import_dir }}"
  register: webroot_permissions
  changed_when: webroot_permissions.stdout == "Wrong permissions"
  failed_when: webroot_permissions.stdout == "Wrong permissions"

- name: "TEST: All URLs should be accessible"
  uri:
    url: "{{ item }}"
  with_items:
    - http://{{ user }}.{{ tld }}
    - http://search.{{ tld }}:{{ solr_port }}/solr/#
    - http://phpmyadmin.{{ tld }}
    - http://adminer.{{ tld }}
