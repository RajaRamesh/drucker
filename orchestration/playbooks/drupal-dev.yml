---
- name: "DEV: Check if settings.local.php file exists"
  stat:
    path: "{{ webroot }}/{{ user }}/{{default_site}}/settings.local.php"
  register: settings_local
  ignore_errors: True

- name: "DEV: Create settings.local.php file"
  command: cp {{ webroot }}/{{ user }}/sites/example.settings.local.php {{ webroot }}/{{ user }}/{{default_site}}/settings.local.php
  when: settings_local.stat.exists == false

- name: "DEV: Check if cache bins have been disabled"
  shell: grep -o "\$settings\['cache'\]\['bins'\]" settings.local.php || echo "absent"
  register: cache_bins
  changed_when: cache_bins.stdout == "absent"

- name: "DEV: Disable cache bins"
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/settings.local.php"
    regexp: '^(.*)# \$settings\[''cache''\]\[''bins''\](.*)$'
    replace: '\1$settings[''cache''][''bins'']\2'
  when: settings_local.stat.exists == false or cache_bins.stdout == 'absent'

- name: "DEV: Enable settings.local.php"
  blockinfile:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/settings.php"
    block: |
      if (file_exists(__DIR__ . '/settings.local.php')) {
        include __DIR__ . '/settings.local.php';
      }

    insertafter: EOF
    marker: "# {mark} MANAGED SETTINGS.LOCAL.PHP BLOCK"

- name: "DEV: Check if services.yml exists"
  stat:
    path: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
  register: services_yml_dev
  ignore_errors: True

- name: "DEV: Create services.yml file"
  command: cp {{ webroot }}/{{ user }}/{{default_site}}/default.services.yml {{ webroot }}/{{ user }}/{{default_site}}/services.yml
  when: services_yml_dev.stat.exists == false

- name: "DEV: Turn on Twig debugging"
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
    regexp: '^(.*)    debug: false(.*)$'
    replace: '\1    debug: true\2'
  register: turn_on_twig_debugging

- name: "DEV: Turn on Twig auto_reload"
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
    regexp: '^(.*)    auto_reload: null(.*)$'
    replace: '\1    auto_reload: true\2'

- name: "DEV: Turn off Twig caching"
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
    regexp: '^(.*)    cache: true(.*)$'
    replace: '\1    cache: false\2'

- name: "DEV: Rebuild Drupal cache"
  command: drush @{{ user }}.{{ tld }} cache-rebuild
  when: turn_on_twig_debugging.changed

- name: "DEV: Check the Zend assertions status"
  shell: grep "^zend.assertions = -1" "{{ php_ini }}" || echo "on"
  register: zend_assertions_enable
  changed_when: zend_assertions_enable.stdout != "on"

- name: "DEV: Turn on Zend assertions"
  replace:
    dest: "{{ php_ini }}"
    regexp: '^(.*)zend.assertions = -1(.*)$'
    replace: '\1zend.assertions = 1\2'
  notify: Restart Apache
  when: zend_assertions_enable.stdout != "on"
