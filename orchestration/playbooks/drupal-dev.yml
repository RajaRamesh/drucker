---
- name: Check if settings.local.php file exists
  stat:
    path: "{{ webroot }}/{{ user }}/sites/settings.local.php"
  register: settings_local
  ignore_errors: True

- name: Create settings.local.php file
  command: cp {{ webroot }}/{{ user }}/sites/example.settings.local.php {{ webroot }}/{{ user }}/sites/settings.local.php
  when: settings_local.stat.exists == false

- name: Check if cache bins have been disabled
  shell: grep -o "\$settings\['cache'\]\['bins'\]" settings.local.php || echo "absent"
  register: cache_bins
  changed_when: cache_bins.stdout == "absent"

- name: Disable cache bins
  replace:
    dest: "{{ webroot }}/{{ user }}/sites/settings.local.php"
    regexp: '^(.*)# \$settings\[''cache''\]\[''bins''\](.*)$'
    replace: '\1$settings[''cache''][''bins'']\2'
  when: settings_local.stat.exists == false or cache_bins.stdout == 'absent'

- name: Enable settings.local.php
  blockinfile:
    dest: "{{ webroot }}/{{ user }}/sites/default/settings.php"
    block: |
      if (file_exists(__DIR__ . '/settings.local.php')) {
        include __DIR__ . '/settings.local.php';
      }

    insertafter: EOF
    marker: "# {mark} MANAGED SETTINGS.LOCAL.PHP BLOCK"

- name: Check if services.yml exists
  stat:
    path: "{{ webroot }}/{{ user }}/sites/default/services.yml"
  register: services_yml_dev
  ignore_errors: True

- name: Create services.yml file
  command: cp {{ webroot }}/{{ user }}/sites/default/default.services.yml {{ webroot }}/{{ user }}/sites/default/services.yml
  when: services_yml_dev.stat.exists == false

- name: Turn on Twig debugging
  replace:
    dest: "{{ webroot }}/{{ user }}/sites/default/services.yml"
    regexp: '^(.*)    debug: false(.*)$'
    replace: '\1    debug: true\2'
  register: turn_on_twig_debugging

- name: Turn on Twig auto_reload
  replace:
    dest: "{{ webroot }}/{{ user }}/sites/default/services.yml"
    regexp: '^(.*)    auto_reload: null(.*)$'
    replace: '\1    auto_reload: true\2'

- name: Turn off Twig caching
  replace:
    dest: "{{ webroot }}/{{ user }}/sites/default/services.yml"
    regexp: '^(.*)    cache: true(.*)$'
    replace: '\1    cache: false\2'

- name: Rebuild Drupal cache
  command: drush @{{ user }}.{{ tld }} cache-rebuild
  when: turn_on_twig_debugging.changed
