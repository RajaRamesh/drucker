---
- name: Check if MariaDB is installed
  stat:
    path: "{{ db_config }}"
  register: mariadb
  ignore_errors: True

- name: Clean up MariaDB data directory
  shell: rm -Rf {{ db_data }}/* warn=False
  when: mariadb.stat.exists == false

- name: Install MariaDB and utilities
  package:
    name: "{{ item }}"
    state: installed
    force: yes
  with_items:
    - mariadb-server
    - python-mysqldb
  when: mariadb.stat.exists == false

- name: Set innodb_file_per_table
  blockinfile:
    dest: "{{ db_config }}"
    block: |
      innodb_file_per_table = 1
    insertafter: '^\[mysqld\]'
    marker: "# {mark} MANAGED INNODB BLOCK"
  when: mariadb.stat.exists == false

- name: Check if MariaDB is configured to allow remote access
  shell: grep -o "0.0.0.0" {{ db_config }} || echo "denied"
  register: db_config_remote_access
  changed_when: db_config_remote_access == "denied"

- name: Configure MariaDB to allow remote access
  replace:
    dest: "{{ db_config }}"
    regexp: '^(.*)127.0.0.1(.*)$'
    replace: '\1 0.0.0.0\2'
  when: db_config_remote_access.stdout == "denied"

- name: Start MariaDB server
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - mysql
  when: mariadb.stat.exists == false

- name: Set MariaDB root user password
  mysql_user:
    login_user: "{{ db_creds }}"
    login_password: "{{ db_creds }}"
    name: "{{ db_creds }}"
    password: "{{ db_creds }}"
    check_implicit_admin: yes
    state: present
  when: mariadb.stat.exists == false

- name: Ensure MySQL is started
  service:
    name: mysql
    enabled: yes
    state: started

- name: Grant remote user access to all databases
  mysql_user:
    login_user: "{{ db_creds }}"
    login_password: "{{ db_creds }}"
    login_host: localhost
    name: "{{ db_creds }}"
    password: "{{ db_creds }}"
    priv: "*.*:ALL"
    host: "{{ web_ip }}"
    state: present

- name: Ensure MySQL is restarted
  service:
    name: mysql
    enabled: yes
    state: restarted
