---
- name: Check if adminer is installed
  stat:
    path: "{{ adminer_index }}"
  register: adminer
  ignore_errors: True

- name: Check adminer version
  shell: grep -o "version {{ adminer_stable_release }}" {{ adminer_index }} || echo "update"
  register: adminer_release
  when: adminer.stat.exists == true
  changed_when: adminer_release == "update"

- name: Create adminer directory
  file:
    path: "{{ adminer_root }}"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ apache_user }}"
  when: adminer.stat.exists == false

- name: Download latest adminer release
  get_url:
    url: "{{ adminer_download_link }}"
    dest: "{{ adminer_root }}"
    validate_certs: no
  register: adminer_get_url_result
  until: "'OK' in adminer_get_url_result.msg"
  retries: 3
  delay: 10
  when: adminer.stat.exists == false or adminer_release.stdout == "update"

- name: Rename adminer file
  command: mv {{ adminer_root }}/adminer-{{ adminer_stable_release }}-en.php {{ adminer_index }}
  when: adminer.stat.exists == false or adminer_release.stdout == "update"

- name: Ensure adminer permissions are correct
  file:
    path: "{{ adminer_index }}"
    owner: "{{ user }}"
    group: "{{ apache_user }}"
  when: adminer.stat.exists == false or adminer_release.stdout == "update"

- name: Check if adminer vHost exists
  stat:
    path: "{{ adminer_vhost }}"
  register: adminer_conf
  ignore_errors: True

- name: Deploy default vHost template
  copy:
    src: files/apache-template.conf
    dest: "{{ sites_available }}"
    mode: 0644
  when: adminer_conf.stat.exists == false

- name: Rename default vHost template
  command: mv {{ vhost_template }} {{ adminer_available_vhost }}
  when: adminer_conf.stat.exists == false

- name: Modify adminer vHost 1/2
  replace:
    dest: "{{ adminer_available_vhost }}"
    regexp: '^(.*)SITENAME\/docroot(.*)$'
    replace: '\1adminer\2'
  register: a
  when: adminer_conf.stat.exists == false

- name: Modify adminer vHost 2/2
  replace:
    dest: "{{ adminer_available_vhost }}"
    regexp: '^(.*)SITENAME(.*)$'
    replace: '\1adminer\2'
  when: adminer_conf.stat.exists == false

- name: Enable adminer vHost
  file:
    src: ../sites-available/adminer.conf
    dest: "{{ adminer_vhost }}"
    state: link
  notify: Reload Apache
  when: adminer_conf.stat.exists == false
