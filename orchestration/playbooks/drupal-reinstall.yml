---
- name: "REINSTALL: Check if Drupal checkout branch is current"
  shell: cd {{ drupal_git_clone_path }} && git branch -l | grep "* {{ drupal_head }}" || echo "wrong branch"
  register: drupal_branch_check

- name: "REINSTALL: Switch Drupal checkout to current branch"
  shell: cd {{ drupal_git_clone_path }} && git checkout {{ drupal_head }}
  when: drupal_branch_check.stdout == "wrong branch"

- name: "REINSTALL: Check if Drupal checkout can be updated"
  shell: cd {{ drupal_git_clone_path }} && git pull
  become: yes
  become_user: "{{ user }}"

- name: "REINSTALL: Check if drucker docroot exists"
  stat:
    path: "{{ docroot }}"
  register: drucker_docroot
  ignore_errors: True

- name: "REINSTALL: Deletes drucker docroot"
  file:
    path: "{{ docroot }}"
    state: absent
  when: drucker_docroot.stat.exists == true

- include: playbooks/drupal.yml

- name: Set up Drupal Console to work with the new docroot 1/2
  composer:
    command: require
    arguments: "{{ drupal_console_composer_package }}:{{ drupal_console_composer_package_version }} --prefer-dist --optimize-autoloader"
    working_dir: "{{ docroot }}"
  become: yes
  become_user: "{{ user }}"

- name: Set up Drupal Console to work with the new docroot 2/2
  composer:
    command: update
    arguments: "{{ drupal_console_composer_package }} --with-dependencies"
    working_dir: "{{ docroot }}"
  become: yes
  become_user: "{{ user }}"

- name: Add new vendor files under version control
  shell: git -C {{ docroot }} add . && git -C {{ docroot }} commit -m "Extra commit for vendor files"
  become: yes
  become_user: "{{ user }}"
