---
- name: Check if Drush binary is in the $PATH
  stat:
    path: "{{ drush_binary }}"
  register: drush_check
  changed_when: drush_check.stat.exists == false

- name: Check if Drush binary exists
  stat:
    path: "{{ drush_composer_executable }}"
  register: drush_executable_check
  changed_when: drush_executable_check.stat.exists == false

- name: Add Drush to $PATH
  file:
    src: "{{ drush_composer_executable }}"
    dest: "{{ drush_binary }}"
    state: link
  when: drush_check.stat.exists == false and drush_executable_check.stat.exists == true

- name: Check Drush version in composer.json file
  shell: grep -E "\"{{ drush_composer_package }}*.*" {{ composer_json_path }} | awk '{print $NF}' | tr -d '",'
  register: drush_composer_package_version_check
  changed_when: drush_composer_package_version_check.stdout != drush_composer_package_version

- name: Install Drush via composer.json
  composer:
    command: require
    arguments: "{{ drush_composer_package }}:{{ drush_composer_package_version }} --prefer-dist --optimize-autoloader"
    working_dir: "{{ composer_dir_path }}"
  become: yes
  become_user: "{{ user }}"
  when: drush_composer_package_version_check.stdout != drush_composer_package_version

- name: Update Drush Composer package
  composer:
    command: update
    arguments: "{{ drush_composer_package }} --with-dependencies"
    working_dir: "{{ composer_dir_path }}"
  become: yes
  become_user: "{{ user }}"
  when: drush_composer_package_version_check.stdout != drush_composer_package_version

- name: Check if sites-aliases directory exists
  stat:
    path: "{{ drush_aliases_path }}"
  register: site_aliases_check
  changed_when: site_aliases_check.stat.exists == false

- name: Create site-aliases directory
  file:
    path: "{{ drush_aliases_path }}"
    state: directory
  when: site_aliases_check.stat.exists == false

- name: Create .drush directory
  file:
    path: "{{ drush_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ user }}"
  when: site_aliases_check.stat.exists == false
