---
- name: Check if Drush launcher is installed
  stat:
    path: "{{ drush_launcher }}"
  register: drush_launcher
  changed_when: drush_launcher.stat.exists == false

- name: Check if Drush launcher needs to be updated
  shell: drush --version| head -n1 | awk '{print $NF}'
  register: drush_launcher_stable_release_check
  when: drush_launcher.stat.exists == true
  changed_when: drush_launcher_stable_release_check.stdout != drush_launcher_stable_release

- name: Copy latest Drush launcher release from mirror
  get_url:
    url: "{{ drush_launcher_mirror_download_link }}"
    dest: "{{ user_programs_path }}"
    mode: 0755
    validate_certs: no
  register: drush_launcher_get_url_result
  until: "'OK' in drush_launcher_get_url_result.msg"
  retries: 3
  delay: 10
  when: drush_launcher.stat.exists == false or drush_launcher_stable_release_check.stdout != drush_launcher_stable_release

- name: Rename Drush launcher PHAR file
  command: mv {{ user_programs_path }}/{{ drush_launcher_archive_file }} {{ user_programs_path }}/drush
  when: drush_launcher.stat.exists == false or drush_launcher_stable_release_check.stdout != drush_launcher_stable_release

- name: Check Drush version in composer.json file
  shell: grep -E "\"{{ drush_composer_package }}*.*" {{ composer_json_path }} | awk '{print $NF}' | tr -d '",'
  register: drush_composer_package_version_check
  changed_when: drush_composer_package_version_check.stdout != drush_composer_package_version

- name: Install Drush via composer.json
  composer:
    command: update
    arguments: "{{ drush_composer_package }}:{{ drush_composer_package_version }} --with-dependencies --prefer-dist --optimize-autoloader"
    working_dir: "{{ composer_dir_path }}"
  become: yes
  become_user: "{{ user }}"
  when: drush_composer_package_version_check.stdout != drush_composer_package_version

- name: Update Drush Composer package
  composer:
    command: update
    arguments: "{{ drush_composer_package }} --with-dependencies"
    working_dir: "{{ composer_dir_path }}"
  become: yes
  become_user: "{{ user }}"
  when: drush_composer_package_version_check.stdout != drush_composer_package_version

- name: Check if sites-aliases directory exists
  stat:
    path: "{{ drush_aliases_path }}"
  register: site_aliases_check
  changed_when: site_aliases_check.stat.exists == false

- name: Create site-aliases directory
  file:
    path: "{{ drush_aliases_path }}"
    state: directory
  when: site_aliases_check.stat.exists == false

- name: Create .drush directory
  file:
    path: "{{ drush_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ user }}"
  when: site_aliases_check.stat.exists == false
