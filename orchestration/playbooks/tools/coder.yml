---
- name: Check if Coder is installed
  stat:
    path: "{{ coder_binary }}"
  register: coder

- name: Install Coder
  composer:
    command: require
    arguments: "{{ coder_composer_package }} {{ coder_stable_release }}"
    working_dir: "{{ composer_dir_path }}"
  become: yes
  become_user: "{{ user }}"
  when: coder.stat.exists == false

- name: Check if Coder is up-to-date
  shell: grep -o "{{ coder_stable_release }}" {{ composer_dir_path }}/composer.json || echo "outdated"
  register: coder_stable_release_check
  changed_when: coder_stable_release_check.stdout != "{{ coder_stable_release }}"

- name: Update Coder
  composer:
    command: require
    arguments: "{{ coder_composer_package }} {{ coder_stable_release }}"
    working_dir: "{{ composer_dir_path }}"
  become: yes
  become_user: "{{ user }}"
  when: coder.stat.exists == true and coder_stable_release_check.stdout != "{{ coder_stable_release }}"

- name: Check if Coder bash aliases exist
  shell: grep -o 'MANAGED CODE SNIFFER BLOCK' {{ bashrc }} || echo "absent"
  register: coder_aliases
  changed_when: coder_aliases == "absent"

- name: Add Code Sniffer aliases
  blockinfile:
    dest: "{{ bashrc }}"
    block: |
      alias drupalcs="phpcs --standard=Drupal --extensions={{ codesniffer_extensions }}"
      alias drupalpractice="phpcs --standard=DrupalPractice --extensions={{ codesniffer_extensions }}"
      alias drupalfix="phpcbf --standard=Drupal --extensions={{ codesniffer_extensions }}"
    insertafter: EOF
    marker: "# {mark} MANAGED CODE SNIFFER BLOCK"
  when: coder_aliases.stdout == 'absent'

- name: Register Drupal and DrupalPractice with PHPCS
  command: phpcs --config-set installed_paths {{ codesniffer_binary }}
  when: coder.stat.exists == false
