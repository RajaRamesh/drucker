---
- name: Check if Drupal Console is installed
  stat:
    path: "{{ user_programs_path }}/drupal"
  register: drupal_console

- name: Check Drupal Console version
  shell: drupal --version | awk '{print $NF}' | head -n1
  register: drupal_console_stable_release_check
  when: drupal_console.stat.exists == true
  changed_when: drupal_console_stable_release_check.stdout != "{{ drupal_console_stable_release }}"

- name: Install Drupal Console launcher
  get_url:
    url: https://github.com/hechoendrupal/drupal-console-launcher/releases/download/{{ drupal_console_stable_release }}/drupal.phar
    dest: "{{ user_programs_path }}/drupal"
    mode: 0755
    validate_certs: no
  register: console_get_url_result
  until: "'OK' in console_get_url_result.msg"
  retries: 3
  delay: 10
  when: drupal_console.stat.exists == false

- name: Update Drupal Console
  command: drupal self-update
  when: drupal_console.stat.exists == true and drupal_console_stable_release_check.stdout != "{{ drupal_console_stable_release }}"

- name: Initialize Drupal Console
  command: drupal init --override --no-interaction
  when: drupal_console.stat.exists == false or drupal_console_stable_release_check.stdout != "{{ drupal_console_stable_release }}"
  become: yes
  become_user: "{{ user }}"

- name: Check if Drupal Console has been configured in .bashrc
  shell: grep -o "source \"\$HOME/.console/console.rc\" 2>/dev/null" /home/{{ user }}.bashrc || echo "absent"
  register: drupal_console_bashrc
  changed_when: drupal_console_bashrc == "absent"

- name: Configure Drupal Console in .bashrc
  lineinfile:
    dest: /home/{{ user }}/.bashrc
    line: "source \"$HOME/.console/console.rc\" 2>/dev/null"
    insertafter: EOF
  when: drupal_console_bashrc.stdout == 'absent'
