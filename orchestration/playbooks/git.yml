---
- name: Check if .git-completion.bash exists
  stat:
    path: "{{ git_completion }}"
  register: git_completion

- name: Deploy .git-completion.bash
  copy:
    src: files/.git-completion.bash
    dest: "{{ home }}"
    mode: 0644
    owner: "{{ user }}"
    group: "{{ user }}"
  become: yes
  become_user: "{{ user }}"
  when: git_completion.stat.exists == false

- name: Check if .git-prompt.sh exists
  stat:
    path: "{{ git_prompt }}"
  register: git_prompt

- name: Deploy .git-prompt.sh
  copy:
    src: files/.git-prompt.sh
    dest: "{{ home }}"
    mode: 0644
    owner: "{{ user }}"
    group: "{{ user }}"
  become: yes
  become_user: "{{ user }}"
  when: git_prompt.stat.exists == false

- name: Check if .gitconfig exists
  stat:
    path: "{{ git_config }}"
  register: git_config

- name: Deploy .gitconfig
  copy:
    src: files/.gitconfig
    dest: "{{ home }}"
    mode: 0644
    owner: "{{ user }}"
    group: "{{ user }}"
  become: yes
  become_user: "{{ user }}"
  when: git_config.stat.exists == false

- name: Check if bash-git-prompt archive exists
  stat:
    path: /tmp/bash-git-prompt-{{ bash_git_prompt_stable_version }}.tar.gz
  register: bash_git_prompt_archive

- name: Check if bash-git-prompt can be updated
  shell: ls /tmp/bash-git-prompt-{{ bash_git_prompt_stable_version }}.tar.gz | grep -o "{{ bash_git_prompt_stable_version }}" || echo "outdated"
  register: bash_git_prompt_update
  changed_when: bash_git_prompt_update.stdout != "{{ bash_git_prompt_stable_version }}"

- name: Download .bash-git-prompt archive
  get_url:
    url: https://github.com/magicmonty/bash-git-prompt/archive/{{ bash_git_prompt_stable_version }}.tar.gz
    dest: /tmp
    validate_certs: no
  register: prompt_get_url_result
  until: "'OK' in prompt_get_url_result.msg"
  retries: 3
  delay: 10
  when: bash_git_prompt_archive.stat.exists == false or bash_git_prompt_update.stdout != "{{ bash_git_prompt_stable_version }}"

- name: Extract bash-git-prompt files
  unarchive:
    src: /tmp/bash-git-prompt-{{ bash_git_prompt_stable_version }}.tar.gz
    dest: /tmp
    copy: no
  become: yes
  become_user: "{{ user }}"
  when: bash_git_prompt_archive.stat.exists == false or bash_git_prompt_update.stdout != "{{ bash_git_prompt_stable_version }}"

- name: Delete outdated .bash-git-prompt directory
  file:
    path: "{{ bash_git_prompt }}"
    state: absent
  when: bash_git_prompt_update.stdout != "{{ bash_git_prompt_stable_version }}"

- name: Rename and move bash-git-prompt directory
  command: mv /tmp/bash-git-prompt-{{ bash_git_prompt_stable_version }} {{ home }}/.bash-git-prompt
  when: bash_git_prompt_archive.stat.exists == false or bash_git_prompt_update.stdout != "{{ bash_git_prompt_stable_version }}"

- name: Check if .bashrc needs to be customized
  shell: grep -o "MANAGED GIT BLOCK" {{ bashrc }} || echo "absent"
  register: git_bashrc

- name: Customize .bashrc
  blockinfile:
    dest: "{{ bashrc }}"
    block: |
      # Git
      if [ -f ~/.git-completion.bash ]; then
        . ~/.git-completion.bash
      fi

      if [ -f ~/.git-prompt.sh ]; then
      . ~/.git-prompt.sh
      fi

      source ~/.bash-git-prompt/gitprompt.sh
      GIT_PROMPT_ONLY_IN_REPO=1
    insertafter: EOF
    marker: "# {mark} MANAGED GIT BLOCK"
  when: git_bashrc.stdout == "absent"
