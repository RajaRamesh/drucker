---
- name: Disable settings.local.php
  blockinfile:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/settings.php"
    block: |
      if (file_exists(__DIR__ . '/settings.local.php')) {
        include __DIR__ . '/settings.local.php';
      }

    state: absent
    marker: "# {mark} MANAGED SETTINGS.LOCAL.PHP BLOCK"

- name: Check if services.yml exists
  stat:
    path: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
  register: services_yml_prod
  ignore_errors: True

- name: Turn off Twig debugging
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
    regexp: '^(.*)    debug: true(.*)$'
    replace: '\1    debug: false\2'
  register: turn_off_twig_debugging
  when: services_yml_prod.stat.exists == true

- name: Turn off Twig auto_reload
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
    regexp: '^(.*)    auto_reload: true(.*)$'
    replace: '\1    auto_reload: null\2'
  when: services_yml_prod.stat.exists == true

- name: Turn on Twig caching
  replace:
    dest: "{{ webroot }}/{{ user }}/{{default_site}}/services.yml"
    regexp: '^(.*)    cache: false(.*)$'
    replace: '\1    cache: true\2'
  when: services_yml_prod.stat.exists == true

- name: Rebuild Drupal cache
  command: drush @{{ user }}.{{ tld }} cache-rebuild
  when: turn_off_twig_debugging.changed

- name: Check the Zend assertions status
  shell: grep "^zend.assertions = 1" "{{ php_ini }}" || echo "off"
  register: zend_assertions_disable
  changed_when: zend_assertions_disable.stdout != "off"

- name: Turn off Zend assertions
  replace:
    dest: "{{ php_ini }}"
    regexp: '^(.*)zend.assertions = 1(.*)$'
    replace: '\1zend.assertions = -1\2'
  notify: Restart Apache
  when: zend_assertions_disable.stdout != "off"
