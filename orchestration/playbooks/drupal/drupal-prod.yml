---
- name: "PROD: Disable settings.local.php"
  blockinfile:
    dest: "{{ settings_php }}"
    block: |
      if (file_exists(__DIR__ . '/settings.local.php')) {
        include __DIR__ . '/settings.local.php';
      }

    state: absent
    marker: "# {mark} MANAGED SETTINGS.LOCAL.PHP BLOCK"

- name: "PROD: Check if services.yml exists"
  stat:
    path: "{{ services_yml }}"
  register: services_yml_prod
  ignore_errors: True

- name: "PROD: Turn off Twig debugging"
  replace:
    dest: "{{ services_yml }}"
    regexp: '^(.*)    debug: true(.*)$'
    replace: '\1    debug: false\2'
  register: turn_off_twig_debugging
  when: services_yml_prod.stat.exists == true

- name: "PROD: Turn off Twig auto_reload"
  replace:
    dest: "{{ services_yml }}"
    regexp: '^(.*)    auto_reload: true(.*)$'
    replace: '\1    auto_reload: null\2'
  when: services_yml_prod.stat.exists == true

- name: "PROD: Turn on Twig caching"
  replace:
    dest: "{{ services_yml }}"
    regexp: '^(.*)    cache: false(.*)$'
    replace: '\1    cache: true\2'
  when: services_yml_prod.stat.exists == true

- name: "PROD: Check if the Testing module is installed"
  shell: drush @{{ user }}.{{ tld }} pm-list --type=module --status=enabled | grep simpletest | awk '{print $4}'
  register: testing_module_check

- name: "PROD: Uninstall the Testing module"
  command: drush @{{ user }}.{{ tld }} pm-uninstall -y simpletest
  when: testing_module_check.stdout == "Enabled"

- name: "PROD: Rebuild Drupal cache"
  command: drush @{{ user }}.{{ tld }} cache-rebuild
  when: turn_off_twig_debugging.changed

- name: "PROD: Check the Zend assertions status"
  shell: grep "^zend.assertions = 1" "{{ php_ini }}" || echo "off"
  register: zend_assertions_disable
  changed_when: zend_assertions_disable.stdout != "off"

- name: "PROD: Turn off Zend assertions"
  replace:
    dest: "{{ php_ini }}"
    regexp: '^(.*)zend.assertions = 1(.*)$'
    replace: '\1zend.assertions = -1\2'
  notify: Restart Apache
  when: zend_assertions_disable.stdout != "off"
