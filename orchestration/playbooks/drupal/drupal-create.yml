---
- include: playbooks/drupal/drupal-checkout.yml
  when: git_tag is undefined

- name: "CREATE: Check if new site exists"
  stat:
    path: "{{ drupal_root }}"
  register: new_site
  ignore_errors: True

- name: "CREATE: Create new site structure"
  file:
    path: "{{ item }}"
    state: directory
    mode: 02755
    owner: "{{ user }}"
    group: "{{ apache_user }}"
  with_items:
    - "{{ drupal_root }}"
    - "{{ drupal_root }}/config"
  when: new_site.stat.exists == false

- name: "CREATE: Copy Drupal checkout into new site stucture"
  command: cp -R {{ drupal_git_clone_path }} {{ drupal_root }}
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false

- name: "CREATE: Rename copied Drupal checkout with expected sitename"
  command: mv {{ drupal_root }}/drupal {{ drupal_root }}/docroot
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false

- name: "CREATE: Remove default .git directory"
  file:
    path: "{{ drupal_root }}/docroot/.git"
    state: absent
  when: new_site.stat.exists == false

- name: "CREATE: Check if new database exists"
  stat:
    path: "{{ mysql_data }}/{{ sitename }}"
  register: new_db

- name: "CREATE: Make sure default site has correct permissions"
  file:
    path: "{{ drupal_root }}/{{ default_site }}"
    state: directory
    mode: 02755
    owner: "{{ user }}"
    group: "{{ apache_user }}"
  when: new_site.stat.exists == false

- include: ../common/drupal-common.yml

- name: "CREATE: Pull vendor dependencies"
  composer:
    command: install
    working_dir: "{{ drupal_root }}/docroot"
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false

- name: "CREATE: Install Drupal"
  command: drush @{{ sitename }}.{{ tld }} site-install standard install_configure_form.update_status_module='array(FALSE,FALSE)' -qy --db-url=mysql://{{ mysql_creds }}:{{ mysql_creds }}@{{ db_ip }}:{{ mysql_port }}/{{ sitename }} --site-name={{ sitename }} --site-mail={{ drupal_creds }}@{{ sitename }}.{{ tld }} --account-name={{ drupal_creds }} --account-pass={{ drupal_creds }} --account-mail={{ drupal_creds }}@{{ sitename }}.{{ tld }}
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false

- name: "CREATE: Check if phpunit.xml file exists"
  stat:
    path: "{{ drupal_root }}/docroot/core/phpunit.xml"
  register: new_phpunit

- name: "CREATE: Deploy phpunit.xml file"
  copy:
    src: "{{ phpunit_source_file }}"
    dest: "{{ drupal_root }}/docroot/core/"
    mode: 0644
  become: yes
  become_user: "{{ user }}"
  when: new_phpunit.stat.exists == false

- name: "CREATE: Modify phpunit.xml file"
  replace:
    dest: "{{ drupal_root }}/docroot/core/phpunit.xml"
    regexp: '^(.*)SITENAME(.*)$'
    replace: '\1{{ sitename }}\2'
  when: new_phpunit.stat.exists == false

- name: "CREATE: Add new site under version control"
  shell: git -C "{{ drupal_root }}" init
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false

- name: "CREATE: Add all new files under version control"
  shell: git -C "{{ drupal_root }}" add --all . && git -C "{{ drupal_root }}" commit -m "Initial commit"
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false

- name: "CREATE: Check if .gitignore exists"
  stat:
    path: "{{ drupal_root }}/.gitignore"
  register: new_gitignore
  ignore_errors: True

- name: "CREATE: Create .gitignore file"
  copy:
    src: "{{ gitignore_source_file }}"
    dest: "{{ drupal_root }}"
    mode: 0644
    owner: "{{ user }}"
    group: "{{ apache_user }}"
  when: new_gitignore.stat.exists == false

- name: "CREATE: Set up Drupal Console to work with the new docroot 1/2"
  composer:
    command: require
    arguments: "{{ drupal_console_composer_package }}:{{ drupal_console_composer_package_version }} --prefer-dist --optimize-autoloader"
    working_dir: "{{ drupal_root }}/docroot"
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false

- name: "CREATE: Set up Drupal Console to work with the new docroot 2/2"
  composer:
    command: update
    arguments: "{{ drupal_console_composer_package }} --with-dependencies"
    working_dir: "{{ drupal_root }}/docroot"
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false

- name: "CREATE: Add new vendor files under version control"
  shell: git -C "{{ drupal_root }}" add --all . && git -C "{{ drupal_root }}" commit -m "Extra commit for vendor files"
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false
