---
- name: "LIGHTNING: Check if new site exists"
  stat:
    path: "{{ drupal_root }}"
  register: new_site
  ignore_errors: True

- name: "LIGHTNING: Check if new database exists"
  stat:
    path: "{{ mysql_data }}/{{ sitename }}"
  register: new_db

- name: "LIGHTNING: Install vendor dependencies (this can take a while)"
  composer:
    command: create-project
    arguments: acquia/lightning-project {{ sitename }}
    working_dir: "{{ webroot }}"
  become: yes
  become_user: "{{ user }}"

- name: "LIGHTNING: Create config directories"
  file:
    path: "{{ item }}"
    state: directory
    mode: 02755
    owner: "{{ user }}"
    group: "{{ apache_user }}"
  with_items:
    - "{{ drupal_root }}/config"
    - "{{ drupal_root }}/{{ default_configuration_dir }}"
  when: new_site.stat.exists == false

- name: "LIGHTNING: Create files directory"
  file:
    path: "{{ drupal_root }}/{{ default_site }}/files"
    state: directory
    mode: 0777
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false

- name: "LIGHTNING: Create libraries directory"
  file:
    path: "{{ drupal_root }}/docroot/libraries"
    state: directory
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false

- name: "LIGHTNING: Create simpletest directory"
  file:
    path: "{{ drupal_root }}/docroot/sites/simpletest"
    state: directory
    mode: 0777
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false

- name: "LIGHTNING: Create settings.php file"
  command: cp {{ drupal_root }}/{{ default_site }}/default.settings.php {{ drupal_root }}/{{ default_site }}/settings.php
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false

- name: "LIGHTNING: Create services.yml file"
  command: cp {{ drupal_root }}/{{ default_site }}/default.services.yml {{ drupal_root }}/{{ default_site }}/services.yml
  become: yes
  become_user: "{{ user }}"
  when: new_site.stat.exists == false or new_db.stat.exists == false
- include: ../common/drupal-common.yml

- name: "LIGHTNING: Install Drupal"
  command: drush @{{ sitename }}.{{ tld }} site-install lightning install_configure_form.update_status_module='array(FALSE,FALSE)' -qy --db-url=mysql://{{ mysql_creds }}:{{ mysql_creds }}@{{ db_ip }}:{{ mysql_port }}/{{ sitename }} --site-name={{ sitename }} --site-mail={{ drupal_creds }}@{{ sitename }}.{{ tld }} --account-name={{ drupal_creds }} --account-pass={{ drupal_creds }} --account-mail={{ drupal_creds }}@{{ sitename }}.{{ tld }}
  become: yes
  become_user: "{{ user }}"
  when: new_aliases.stat.exists == false

- name: "LIGHTNING: Check if phpunit.xml file exists"
  stat:
    path: "{{ drupal_root }}/docroot/core/phpunit.xml"
  register: lightning_phpunit

- name: "LIGHTNING: Deploy phpunit.xml file"
  copy:
    src: "{{ phpunit_source_file }}"
    dest: "{{ drupal_root }}/docroot/core/"
    mode: 0644
  become: yes
  become_user: "{{ user }}"
  when: lightning_phpunit.stat.exists == false

- name: "LIGHTNING: Modify phpunit.xml file"
  replace:
    dest: "{{ drupal_root }}/docroot/core/phpunit.xml"
    regexp: '^(.*)SITENAME(.*)$'
    replace: '\1{{ sitename }}\2'
  when: lightning_phpunit.stat.exists == false

- name: "LIGHTNING: Make sure we're down one level for the PHPUnit path"
  replace:
    dest: "{{ drupal_root }}/docroot/core/phpunit.xml"
    regexp: '^(.*){{ drupal_root }}(.*)$'
    replace: '\1{{ drupal_root }}/docroot\2'
  when: lightning_phpunit.stat.exists == false

- name: "LIGHTNING: Check if .gitignore exists"
  stat:
    path: "{{ drupal_root }}/.gitignore"
  register: lightning_gitignore
  ignore_errors: True

- name: "LIGHTNING: Create .gitignore file"
  copy:
    src: "{{ gitignore_source_file }}"
    dest: "{{ drupal_root }}"
    mode: 0644
  become: yes
  become_user: "{{ user }}"
  when: lightning_gitignore.stat.exists == false

- name: "LIGHTNING: Initialize Git repository"
  shell: git -C {{ drupal_root }} init
  args:
    warn: no
  register: initial_commit
  become: yes
  become_user: "{{ user }}"
  when: lightning_gitignore.stat.exists == false

- name: "LIGHTNING: Add all new files under version control"
  shell: git -C {{ drupal_root }} add --all . && git -C {{ drupal_root }} commit -m "Initial commit"
  become: yes
  become_user: "{{ user }}"
  when: lightning_gitignore.stat.exists == false

- name: "LIGHTNING: Make sure files dir ownership is correct"
  file:
    path: "{{ drupal_root }}/{{ default_site }}/files"
    owner: "{{ user }}"
    group: "{{ apache_user }}"
    recurse: yes
  when: new_site.stat.exists == false or new_db.stat.exists == false
