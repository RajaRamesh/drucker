<!DOCTYPE html>
<html lang='en'>
<head>
<title>schema.xml\7.x\solr-conf - search_api_solr - For more information about this repository, visit the project page at http://drupal.org/project/search_api_solr</title>
<meta name='generator' content='cgit v1.1'/>
<meta name='robots' content='index, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-data/cgit.css'/>
<link rel='shortcut icon' href='/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='http://cgit.drupalcode.org/search_api_solr/atom/solr-conf/7.x/schema.xml?h=8.x-2.x' type='application/atom+xml'/>
<link rel='vcs-git' href='git://git.drupal.org/project/search_api_solr.git' title='search_api_solr Git repository'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/'><img src='/cgit-data/logo.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/'>index</a> : <a title='search_api_solr' href='/search_api_solr/'>search_api_solr</a></td><td class='form'><form method='get'>
<select name='h' onchange='this.form.submit();'>
<option value='7.x-1.x'>7.x-1.x</option>
<option value='8.x-1.x'>8.x-1.x</option>
<option value='8.x-2.x' selected='selected'>8.x-2.x</option>
</select> <input type='submit' value='switch'/></form></td></tr>
<tr><td class='sub'>For more information about this repository, visit the project page at http://drupal.org/project/search_api_solr</td><td class='sub right'>Drupal Git User (LDAP)</td></tr></table>
<table class='tabs'><tr><td>
<a href='/search_api_solr/'>summary</a><a href='/search_api_solr/refs/'>refs</a><a href='/search_api_solr/log/solr-conf/7.x/schema.xml'>log</a><a class='active' href='/search_api_solr/tree/solr-conf/7.x/schema.xml'>tree</a><a href='/search_api_solr/commit/solr-conf/7.x/schema.xml'>commit</a><a href='/search_api_solr/diff/solr-conf/7.x/schema.xml'>diff</a><a href='/search_api_solr/stats/solr-conf/7.x/schema.xml'>stats</a></td><td class='form'><form class='right' method='get' action='/search_api_solr/log/solr-conf/7.x/schema.xml'>
<select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='text' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='path'>path: <a href='/search_api_solr/tree/'>root</a>/<a href='/search_api_solr/tree/solr-conf'>solr-conf</a>/<a href='/search_api_solr/tree/solr-conf/7.x'>7.x</a>/<a href='/search_api_solr/tree/solr-conf/7.x/schema.xml'>schema.xml</a></div><div class='content'>blob: abca9d8516c2d22dfa16500084e354a879de298d (<a href='/search_api_solr/plain/solr-conf/7.x/schema.xml'>plain</a>)
<table summary='blob content' class='blob'>
<tr><td class='linenumbers'><pre><a id='n1' href='#n1'>1</a>
<a id='n2' href='#n2'>2</a>
<a id='n3' href='#n3'>3</a>
<a id='n4' href='#n4'>4</a>
<a id='n5' href='#n5'>5</a>
<a id='n6' href='#n6'>6</a>
<a id='n7' href='#n7'>7</a>
<a id='n8' href='#n8'>8</a>
<a id='n9' href='#n9'>9</a>
<a id='n10' href='#n10'>10</a>
<a id='n11' href='#n11'>11</a>
<a id='n12' href='#n12'>12</a>
<a id='n13' href='#n13'>13</a>
<a id='n14' href='#n14'>14</a>
<a id='n15' href='#n15'>15</a>
<a id='n16' href='#n16'>16</a>
<a id='n17' href='#n17'>17</a>
<a id='n18' href='#n18'>18</a>
<a id='n19' href='#n19'>19</a>
<a id='n20' href='#n20'>20</a>
<a id='n21' href='#n21'>21</a>
<a id='n22' href='#n22'>22</a>
<a id='n23' href='#n23'>23</a>
<a id='n24' href='#n24'>24</a>
<a id='n25' href='#n25'>25</a>
<a id='n26' href='#n26'>26</a>
<a id='n27' href='#n27'>27</a>
<a id='n28' href='#n28'>28</a>
<a id='n29' href='#n29'>29</a>
<a id='n30' href='#n30'>30</a>
<a id='n31' href='#n31'>31</a>
<a id='n32' href='#n32'>32</a>
<a id='n33' href='#n33'>33</a>
<a id='n34' href='#n34'>34</a>
<a id='n35' href='#n35'>35</a>
<a id='n36' href='#n36'>36</a>
<a id='n37' href='#n37'>37</a>
<a id='n38' href='#n38'>38</a>
<a id='n39' href='#n39'>39</a>
<a id='n40' href='#n40'>40</a>
<a id='n41' href='#n41'>41</a>
<a id='n42' href='#n42'>42</a>
<a id='n43' href='#n43'>43</a>
<a id='n44' href='#n44'>44</a>
<a id='n45' href='#n45'>45</a>
<a id='n46' href='#n46'>46</a>
<a id='n47' href='#n47'>47</a>
<a id='n48' href='#n48'>48</a>
<a id='n49' href='#n49'>49</a>
<a id='n50' href='#n50'>50</a>
<a id='n51' href='#n51'>51</a>
<a id='n52' href='#n52'>52</a>
<a id='n53' href='#n53'>53</a>
<a id='n54' href='#n54'>54</a>
<a id='n55' href='#n55'>55</a>
<a id='n56' href='#n56'>56</a>
<a id='n57' href='#n57'>57</a>
<a id='n58' href='#n58'>58</a>
<a id='n59' href='#n59'>59</a>
<a id='n60' href='#n60'>60</a>
<a id='n61' href='#n61'>61</a>
<a id='n62' href='#n62'>62</a>
<a id='n63' href='#n63'>63</a>
<a id='n64' href='#n64'>64</a>
<a id='n65' href='#n65'>65</a>
<a id='n66' href='#n66'>66</a>
<a id='n67' href='#n67'>67</a>
<a id='n68' href='#n68'>68</a>
<a id='n69' href='#n69'>69</a>
<a id='n70' href='#n70'>70</a>
<a id='n71' href='#n71'>71</a>
<a id='n72' href='#n72'>72</a>
<a id='n73' href='#n73'>73</a>
<a id='n74' href='#n74'>74</a>
<a id='n75' href='#n75'>75</a>
<a id='n76' href='#n76'>76</a>
<a id='n77' href='#n77'>77</a>
<a id='n78' href='#n78'>78</a>
<a id='n79' href='#n79'>79</a>
<a id='n80' href='#n80'>80</a>
<a id='n81' href='#n81'>81</a>
<a id='n82' href='#n82'>82</a>
<a id='n83' href='#n83'>83</a>
<a id='n84' href='#n84'>84</a>
<a id='n85' href='#n85'>85</a>
<a id='n86' href='#n86'>86</a>
<a id='n87' href='#n87'>87</a>
<a id='n88' href='#n88'>88</a>
<a id='n89' href='#n89'>89</a>
<a id='n90' href='#n90'>90</a>
<a id='n91' href='#n91'>91</a>
<a id='n92' href='#n92'>92</a>
<a id='n93' href='#n93'>93</a>
<a id='n94' href='#n94'>94</a>
<a id='n95' href='#n95'>95</a>
<a id='n96' href='#n96'>96</a>
<a id='n97' href='#n97'>97</a>
<a id='n98' href='#n98'>98</a>
<a id='n99' href='#n99'>99</a>
<a id='n100' href='#n100'>100</a>
<a id='n101' href='#n101'>101</a>
<a id='n102' href='#n102'>102</a>
<a id='n103' href='#n103'>103</a>
<a id='n104' href='#n104'>104</a>
<a id='n105' href='#n105'>105</a>
<a id='n106' href='#n106'>106</a>
<a id='n107' href='#n107'>107</a>
<a id='n108' href='#n108'>108</a>
<a id='n109' href='#n109'>109</a>
<a id='n110' href='#n110'>110</a>
<a id='n111' href='#n111'>111</a>
<a id='n112' href='#n112'>112</a>
<a id='n113' href='#n113'>113</a>
<a id='n114' href='#n114'>114</a>
<a id='n115' href='#n115'>115</a>
<a id='n116' href='#n116'>116</a>
<a id='n117' href='#n117'>117</a>
<a id='n118' href='#n118'>118</a>
<a id='n119' href='#n119'>119</a>
<a id='n120' href='#n120'>120</a>
<a id='n121' href='#n121'>121</a>
<a id='n122' href='#n122'>122</a>
<a id='n123' href='#n123'>123</a>
<a id='n124' href='#n124'>124</a>
<a id='n125' href='#n125'>125</a>
<a id='n126' href='#n126'>126</a>
<a id='n127' href='#n127'>127</a>
<a id='n128' href='#n128'>128</a>
<a id='n129' href='#n129'>129</a>
<a id='n130' href='#n130'>130</a>
<a id='n131' href='#n131'>131</a>
<a id='n132' href='#n132'>132</a>
<a id='n133' href='#n133'>133</a>
<a id='n134' href='#n134'>134</a>
<a id='n135' href='#n135'>135</a>
<a id='n136' href='#n136'>136</a>
<a id='n137' href='#n137'>137</a>
<a id='n138' href='#n138'>138</a>
<a id='n139' href='#n139'>139</a>
<a id='n140' href='#n140'>140</a>
<a id='n141' href='#n141'>141</a>
<a id='n142' href='#n142'>142</a>
<a id='n143' href='#n143'>143</a>
<a id='n144' href='#n144'>144</a>
<a id='n145' href='#n145'>145</a>
<a id='n146' href='#n146'>146</a>
<a id='n147' href='#n147'>147</a>
<a id='n148' href='#n148'>148</a>
<a id='n149' href='#n149'>149</a>
<a id='n150' href='#n150'>150</a>
<a id='n151' href='#n151'>151</a>
<a id='n152' href='#n152'>152</a>
<a id='n153' href='#n153'>153</a>
<a id='n154' href='#n154'>154</a>
<a id='n155' href='#n155'>155</a>
<a id='n156' href='#n156'>156</a>
<a id='n157' href='#n157'>157</a>
<a id='n158' href='#n158'>158</a>
<a id='n159' href='#n159'>159</a>
<a id='n160' href='#n160'>160</a>
<a id='n161' href='#n161'>161</a>
<a id='n162' href='#n162'>162</a>
<a id='n163' href='#n163'>163</a>
<a id='n164' href='#n164'>164</a>
<a id='n165' href='#n165'>165</a>
<a id='n166' href='#n166'>166</a>
<a id='n167' href='#n167'>167</a>
<a id='n168' href='#n168'>168</a>
<a id='n169' href='#n169'>169</a>
<a id='n170' href='#n170'>170</a>
<a id='n171' href='#n171'>171</a>
<a id='n172' href='#n172'>172</a>
<a id='n173' href='#n173'>173</a>
<a id='n174' href='#n174'>174</a>
<a id='n175' href='#n175'>175</a>
<a id='n176' href='#n176'>176</a>
<a id='n177' href='#n177'>177</a>
<a id='n178' href='#n178'>178</a>
<a id='n179' href='#n179'>179</a>
<a id='n180' href='#n180'>180</a>
<a id='n181' href='#n181'>181</a>
<a id='n182' href='#n182'>182</a>
<a id='n183' href='#n183'>183</a>
<a id='n184' href='#n184'>184</a>
<a id='n185' href='#n185'>185</a>
<a id='n186' href='#n186'>186</a>
<a id='n187' href='#n187'>187</a>
<a id='n188' href='#n188'>188</a>
<a id='n189' href='#n189'>189</a>
<a id='n190' href='#n190'>190</a>
<a id='n191' href='#n191'>191</a>
<a id='n192' href='#n192'>192</a>
<a id='n193' href='#n193'>193</a>
<a id='n194' href='#n194'>194</a>
<a id='n195' href='#n195'>195</a>
<a id='n196' href='#n196'>196</a>
<a id='n197' href='#n197'>197</a>
<a id='n198' href='#n198'>198</a>
<a id='n199' href='#n199'>199</a>
<a id='n200' href='#n200'>200</a>
<a id='n201' href='#n201'>201</a>
<a id='n202' href='#n202'>202</a>
<a id='n203' href='#n203'>203</a>
<a id='n204' href='#n204'>204</a>
<a id='n205' href='#n205'>205</a>
<a id='n206' href='#n206'>206</a>
<a id='n207' href='#n207'>207</a>
<a id='n208' href='#n208'>208</a>
<a id='n209' href='#n209'>209</a>
<a id='n210' href='#n210'>210</a>
<a id='n211' href='#n211'>211</a>
<a id='n212' href='#n212'>212</a>
<a id='n213' href='#n213'>213</a>
<a id='n214' href='#n214'>214</a>
<a id='n215' href='#n215'>215</a>
<a id='n216' href='#n216'>216</a>
<a id='n217' href='#n217'>217</a>
<a id='n218' href='#n218'>218</a>
<a id='n219' href='#n219'>219</a>
<a id='n220' href='#n220'>220</a>
<a id='n221' href='#n221'>221</a>
<a id='n222' href='#n222'>222</a>
<a id='n223' href='#n223'>223</a>
<a id='n224' href='#n224'>224</a>
<a id='n225' href='#n225'>225</a>
<a id='n226' href='#n226'>226</a>
<a id='n227' href='#n227'>227</a>
<a id='n228' href='#n228'>228</a>
<a id='n229' href='#n229'>229</a>
<a id='n230' href='#n230'>230</a>
<a id='n231' href='#n231'>231</a>
<a id='n232' href='#n232'>232</a>
<a id='n233' href='#n233'>233</a>
<a id='n234' href='#n234'>234</a>
<a id='n235' href='#n235'>235</a>
<a id='n236' href='#n236'>236</a>
<a id='n237' href='#n237'>237</a>
<a id='n238' href='#n238'>238</a>
<a id='n239' href='#n239'>239</a>
<a id='n240' href='#n240'>240</a>
<a id='n241' href='#n241'>241</a>
<a id='n242' href='#n242'>242</a>
<a id='n243' href='#n243'>243</a>
<a id='n244' href='#n244'>244</a>
<a id='n245' href='#n245'>245</a>
<a id='n246' href='#n246'>246</a>
<a id='n247' href='#n247'>247</a>
<a id='n248' href='#n248'>248</a>
<a id='n249' href='#n249'>249</a>
<a id='n250' href='#n250'>250</a>
<a id='n251' href='#n251'>251</a>
<a id='n252' href='#n252'>252</a>
<a id='n253' href='#n253'>253</a>
<a id='n254' href='#n254'>254</a>
<a id='n255' href='#n255'>255</a>
<a id='n256' href='#n256'>256</a>
<a id='n257' href='#n257'>257</a>
<a id='n258' href='#n258'>258</a>
<a id='n259' href='#n259'>259</a>
<a id='n260' href='#n260'>260</a>
<a id='n261' href='#n261'>261</a>
<a id='n262' href='#n262'>262</a>
<a id='n263' href='#n263'>263</a>
<a id='n264' href='#n264'>264</a>
<a id='n265' href='#n265'>265</a>
<a id='n266' href='#n266'>266</a>
<a id='n267' href='#n267'>267</a>
<a id='n268' href='#n268'>268</a>
<a id='n269' href='#n269'>269</a>
<a id='n270' href='#n270'>270</a>
<a id='n271' href='#n271'>271</a>
<a id='n272' href='#n272'>272</a>
<a id='n273' href='#n273'>273</a>
<a id='n274' href='#n274'>274</a>
<a id='n275' href='#n275'>275</a>
<a id='n276' href='#n276'>276</a>
<a id='n277' href='#n277'>277</a>
<a id='n278' href='#n278'>278</a>
<a id='n279' href='#n279'>279</a>
<a id='n280' href='#n280'>280</a>
<a id='n281' href='#n281'>281</a>
<a id='n282' href='#n282'>282</a>
<a id='n283' href='#n283'>283</a>
<a id='n284' href='#n284'>284</a>
<a id='n285' href='#n285'>285</a>
<a id='n286' href='#n286'>286</a>
<a id='n287' href='#n287'>287</a>
<a id='n288' href='#n288'>288</a>
<a id='n289' href='#n289'>289</a>
<a id='n290' href='#n290'>290</a>
<a id='n291' href='#n291'>291</a>
<a id='n292' href='#n292'>292</a>
<a id='n293' href='#n293'>293</a>
<a id='n294' href='#n294'>294</a>
<a id='n295' href='#n295'>295</a>
<a id='n296' href='#n296'>296</a>
<a id='n297' href='#n297'>297</a>
<a id='n298' href='#n298'>298</a>
<a id='n299' href='#n299'>299</a>
<a id='n300' href='#n300'>300</a>
<a id='n301' href='#n301'>301</a>
<a id='n302' href='#n302'>302</a>
<a id='n303' href='#n303'>303</a>
<a id='n304' href='#n304'>304</a>
<a id='n305' href='#n305'>305</a>
<a id='n306' href='#n306'>306</a>
<a id='n307' href='#n307'>307</a>
<a id='n308' href='#n308'>308</a>
<a id='n309' href='#n309'>309</a>
<a id='n310' href='#n310'>310</a>
<a id='n311' href='#n311'>311</a>
<a id='n312' href='#n312'>312</a>
<a id='n313' href='#n313'>313</a>
<a id='n314' href='#n314'>314</a>
<a id='n315' href='#n315'>315</a>
<a id='n316' href='#n316'>316</a>
<a id='n317' href='#n317'>317</a>
<a id='n318' href='#n318'>318</a>
<a id='n319' href='#n319'>319</a>
<a id='n320' href='#n320'>320</a>
<a id='n321' href='#n321'>321</a>
<a id='n322' href='#n322'>322</a>
<a id='n323' href='#n323'>323</a>
<a id='n324' href='#n324'>324</a>
<a id='n325' href='#n325'>325</a>
<a id='n326' href='#n326'>326</a>
<a id='n327' href='#n327'>327</a>
<a id='n328' href='#n328'>328</a>
<a id='n329' href='#n329'>329</a>
<a id='n330' href='#n330'>330</a>
<a id='n331' href='#n331'>331</a>
<a id='n332' href='#n332'>332</a>
<a id='n333' href='#n333'>333</a>
<a id='n334' href='#n334'>334</a>
<a id='n335' href='#n335'>335</a>
<a id='n336' href='#n336'>336</a>
<a id='n337' href='#n337'>337</a>
<a id='n338' href='#n338'>338</a>
<a id='n339' href='#n339'>339</a>
<a id='n340' href='#n340'>340</a>
<a id='n341' href='#n341'>341</a>
<a id='n342' href='#n342'>342</a>
<a id='n343' href='#n343'>343</a>
<a id='n344' href='#n344'>344</a>
<a id='n345' href='#n345'>345</a>
<a id='n346' href='#n346'>346</a>
<a id='n347' href='#n347'>347</a>
<a id='n348' href='#n348'>348</a>
<a id='n349' href='#n349'>349</a>
<a id='n350' href='#n350'>350</a>
<a id='n351' href='#n351'>351</a>
<a id='n352' href='#n352'>352</a>
<a id='n353' href='#n353'>353</a>
<a id='n354' href='#n354'>354</a>
<a id='n355' href='#n355'>355</a>
<a id='n356' href='#n356'>356</a>
<a id='n357' href='#n357'>357</a>
<a id='n358' href='#n358'>358</a>
<a id='n359' href='#n359'>359</a>
<a id='n360' href='#n360'>360</a>
<a id='n361' href='#n361'>361</a>
<a id='n362' href='#n362'>362</a>
<a id='n363' href='#n363'>363</a>
<a id='n364' href='#n364'>364</a>
<a id='n365' href='#n365'>365</a>
<a id='n366' href='#n366'>366</a>
<a id='n367' href='#n367'>367</a>
<a id='n368' href='#n368'>368</a>
<a id='n369' href='#n369'>369</a>
<a id='n370' href='#n370'>370</a>
<a id='n371' href='#n371'>371</a>
<a id='n372' href='#n372'>372</a>
<a id='n373' href='#n373'>373</a>
<a id='n374' href='#n374'>374</a>
<a id='n375' href='#n375'>375</a>
<a id='n376' href='#n376'>376</a>
<a id='n377' href='#n377'>377</a>
<a id='n378' href='#n378'>378</a>
<a id='n379' href='#n379'>379</a>
<a id='n380' href='#n380'>380</a>
<a id='n381' href='#n381'>381</a>
<a id='n382' href='#n382'>382</a>
<a id='n383' href='#n383'>383</a>
<a id='n384' href='#n384'>384</a>
<a id='n385' href='#n385'>385</a>
<a id='n386' href='#n386'>386</a>
<a id='n387' href='#n387'>387</a>
<a id='n388' href='#n388'>388</a>
<a id='n389' href='#n389'>389</a>
<a id='n390' href='#n390'>390</a>
<a id='n391' href='#n391'>391</a>
<a id='n392' href='#n392'>392</a>
<a id='n393' href='#n393'>393</a>
<a id='n394' href='#n394'>394</a>
<a id='n395' href='#n395'>395</a>
<a id='n396' href='#n396'>396</a>
<a id='n397' href='#n397'>397</a>
<a id='n398' href='#n398'>398</a>
<a id='n399' href='#n399'>399</a>
<a id='n400' href='#n400'>400</a>
<a id='n401' href='#n401'>401</a>
<a id='n402' href='#n402'>402</a>
<a id='n403' href='#n403'>403</a>
<a id='n404' href='#n404'>404</a>
<a id='n405' href='#n405'>405</a>
<a id='n406' href='#n406'>406</a>
<a id='n407' href='#n407'>407</a>
<a id='n408' href='#n408'>408</a>
<a id='n409' href='#n409'>409</a>
<a id='n410' href='#n410'>410</a>
<a id='n411' href='#n411'>411</a>
<a id='n412' href='#n412'>412</a>
<a id='n413' href='#n413'>413</a>
<a id='n414' href='#n414'>414</a>
<a id='n415' href='#n415'>415</a>
<a id='n416' href='#n416'>416</a>
<a id='n417' href='#n417'>417</a>
<a id='n418' href='#n418'>418</a>
<a id='n419' href='#n419'>419</a>
<a id='n420' href='#n420'>420</a>
<a id='n421' href='#n421'>421</a>
<a id='n422' href='#n422'>422</a>
<a id='n423' href='#n423'>423</a>
<a id='n424' href='#n424'>424</a>
<a id='n425' href='#n425'>425</a>
<a id='n426' href='#n426'>426</a>
<a id='n427' href='#n427'>427</a>
<a id='n428' href='#n428'>428</a>
<a id='n429' href='#n429'>429</a>
<a id='n430' href='#n430'>430</a>
<a id='n431' href='#n431'>431</a>
<a id='n432' href='#n432'>432</a>
<a id='n433' href='#n433'>433</a>
<a id='n434' href='#n434'>434</a>
<a id='n435' href='#n435'>435</a>
<a id='n436' href='#n436'>436</a>
<a id='n437' href='#n437'>437</a>
<a id='n438' href='#n438'>438</a>
<a id='n439' href='#n439'>439</a>
<a id='n440' href='#n440'>440</a>
<a id='n441' href='#n441'>441</a>
<a id='n442' href='#n442'>442</a>
<a id='n443' href='#n443'>443</a>
<a id='n444' href='#n444'>444</a>
<a id='n445' href='#n445'>445</a>
<a id='n446' href='#n446'>446</a>
<a id='n447' href='#n447'>447</a>
<a id='n448' href='#n448'>448</a>
<a id='n449' href='#n449'>449</a>
<a id='n450' href='#n450'>450</a>
<a id='n451' href='#n451'>451</a>
<a id='n452' href='#n452'>452</a>
<a id='n453' href='#n453'>453</a>
<a id='n454' href='#n454'>454</a>
<a id='n455' href='#n455'>455</a>
<a id='n456' href='#n456'>456</a>
<a id='n457' href='#n457'>457</a>
<a id='n458' href='#n458'>458</a>
<a id='n459' href='#n459'>459</a>
<a id='n460' href='#n460'>460</a>
<a id='n461' href='#n461'>461</a>
<a id='n462' href='#n462'>462</a>
<a id='n463' href='#n463'>463</a>
<a id='n464' href='#n464'>464</a>
<a id='n465' href='#n465'>465</a>
<a id='n466' href='#n466'>466</a>
<a id='n467' href='#n467'>467</a>
<a id='n468' href='#n468'>468</a>
<a id='n469' href='#n469'>469</a>
<a id='n470' href='#n470'>470</a>
<a id='n471' href='#n471'>471</a>
<a id='n472' href='#n472'>472</a>
<a id='n473' href='#n473'>473</a>
<a id='n474' href='#n474'>474</a>
<a id='n475' href='#n475'>475</a>
<a id='n476' href='#n476'>476</a>
<a id='n477' href='#n477'>477</a>
<a id='n478' href='#n478'>478</a>
<a id='n479' href='#n479'>479</a>
<a id='n480' href='#n480'>480</a>
<a id='n481' href='#n481'>481</a>
<a id='n482' href='#n482'>482</a>
<a id='n483' href='#n483'>483</a>
<a id='n484' href='#n484'>484</a>
<a id='n485' href='#n485'>485</a>
<a id='n486' href='#n486'>486</a>
<a id='n487' href='#n487'>487</a>
<a id='n488' href='#n488'>488</a>
<a id='n489' href='#n489'>489</a>
<a id='n490' href='#n490'>490</a>
<a id='n491' href='#n491'>491</a>
<a id='n492' href='#n492'>492</a>
<a id='n493' href='#n493'>493</a>
<a id='n494' href='#n494'>494</a>
<a id='n495' href='#n495'>495</a>
<a id='n496' href='#n496'>496</a>
<a id='n497' href='#n497'>497</a>
<a id='n498' href='#n498'>498</a>
<a id='n499' href='#n499'>499</a>
<a id='n500' href='#n500'>500</a>
<a id='n501' href='#n501'>501</a>
<a id='n502' href='#n502'>502</a>
<a id='n503' href='#n503'>503</a>
<a id='n504' href='#n504'>504</a>
<a id='n505' href='#n505'>505</a>
<a id='n506' href='#n506'>506</a>
<a id='n507' href='#n507'>507</a>
<a id='n508' href='#n508'>508</a>
<a id='n509' href='#n509'>509</a>
<a id='n510' href='#n510'>510</a>
<a id='n511' href='#n511'>511</a>
<a id='n512' href='#n512'>512</a>
<a id='n513' href='#n513'>513</a>
<a id='n514' href='#n514'>514</a>
<a id='n515' href='#n515'>515</a>
<a id='n516' href='#n516'>516</a>
<a id='n517' href='#n517'>517</a>
<a id='n518' href='#n518'>518</a>
<a id='n519' href='#n519'>519</a>
<a id='n520' href='#n520'>520</a>
<a id='n521' href='#n521'>521</a>
<a id='n522' href='#n522'>522</a>
<a id='n523' href='#n523'>523</a>
<a id='n524' href='#n524'>524</a>
<a id='n525' href='#n525'>525</a>
<a id='n526' href='#n526'>526</a>
<a id='n527' href='#n527'>527</a>
<a id='n528' href='#n528'>528</a>
<a id='n529' href='#n529'>529</a>
<a id='n530' href='#n530'>530</a>
<a id='n531' href='#n531'>531</a>
<a id='n532' href='#n532'>532</a>
<a id='n533' href='#n533'>533</a>
<a id='n534' href='#n534'>534</a>
<a id='n535' href='#n535'>535</a>
<a id='n536' href='#n536'>536</a>
<a id='n537' href='#n537'>537</a>
<a id='n538' href='#n538'>538</a>
<a id='n539' href='#n539'>539</a>
<a id='n540' href='#n540'>540</a>
<a id='n541' href='#n541'>541</a>
<a id='n542' href='#n542'>542</a>
<a id='n543' href='#n543'>543</a>
<a id='n544' href='#n544'>544</a>
<a id='n545' href='#n545'>545</a>
<a id='n546' href='#n546'>546</a>
<a id='n547' href='#n547'>547</a>
<a id='n548' href='#n548'>548</a>
<a id='n549' href='#n549'>549</a>
<a id='n550' href='#n550'>550</a>
<a id='n551' href='#n551'>551</a>
<a id='n552' href='#n552'>552</a>
<a id='n553' href='#n553'>553</a>
<a id='n554' href='#n554'>554</a>
<a id='n555' href='#n555'>555</a>
<a id='n556' href='#n556'>556</a>
<a id='n557' href='#n557'>557</a>
<a id='n558' href='#n558'>558</a>
<a id='n559' href='#n559'>559</a>
<a id='n560' href='#n560'>560</a>
<a id='n561' href='#n561'>561</a>
<a id='n562' href='#n562'>562</a>
<a id='n563' href='#n563'>563</a>
<a id='n564' href='#n564'>564</a>
<a id='n565' href='#n565'>565</a>
<a id='n566' href='#n566'>566</a>
<a id='n567' href='#n567'>567</a>
<a id='n568' href='#n568'>568</a>
<a id='n569' href='#n569'>569</a>
<a id='n570' href='#n570'>570</a>
<a id='n571' href='#n571'>571</a>
<a id='n572' href='#n572'>572</a>
<a id='n573' href='#n573'>573</a>
<a id='n574' href='#n574'>574</a>
<a id='n575' href='#n575'>575</a>
<a id='n576' href='#n576'>576</a>
<a id='n577' href='#n577'>577</a>
<a id='n578' href='#n578'>578</a>
<a id='n579' href='#n579'>579</a>
<a id='n580' href='#n580'>580</a>
<a id='n581' href='#n581'>581</a>
<a id='n582' href='#n582'>582</a>
<a id='n583' href='#n583'>583</a>
<a id='n584' href='#n584'>584</a>
<a id='n585' href='#n585'>585</a>
<a id='n586' href='#n586'>586</a>
<a id='n587' href='#n587'>587</a>
<a id='n588' href='#n588'>588</a>
<a id='n589' href='#n589'>589</a>
<a id='n590' href='#n590'>590</a>
<a id='n591' href='#n591'>591</a>
<a id='n592' href='#n592'>592</a>
<a id='n593' href='#n593'>593</a>
<a id='n594' href='#n594'>594</a>
<a id='n595' href='#n595'>595</a>
<a id='n596' href='#n596'>596</a>
<a id='n597' href='#n597'>597</a>
<a id='n598' href='#n598'>598</a>
<a id='n599' href='#n599'>599</a>
<a id='n600' href='#n600'>600</a>
<a id='n601' href='#n601'>601</a>
<a id='n602' href='#n602'>602</a>
<a id='n603' href='#n603'>603</a>
<a id='n604' href='#n604'>604</a>
<a id='n605' href='#n605'>605</a>
<a id='n606' href='#n606'>606</a>
<a id='n607' href='#n607'>607</a>
<a id='n608' href='#n608'>608</a>
<a id='n609' href='#n609'>609</a>
<a id='n610' href='#n610'>610</a>
<a id='n611' href='#n611'>611</a>
<a id='n612' href='#n612'>612</a>
<a id='n613' href='#n613'>613</a>
<a id='n614' href='#n614'>614</a>
<a id='n615' href='#n615'>615</a>
<a id='n616' href='#n616'>616</a>
<a id='n617' href='#n617'>617</a>
<a id='n618' href='#n618'>618</a>
<a id='n619' href='#n619'>619</a>
<a id='n620' href='#n620'>620</a>
<a id='n621' href='#n621'>621</a>
<a id='n622' href='#n622'>622</a>
<a id='n623' href='#n623'>623</a>
<a id='n624' href='#n624'>624</a>
<a id='n625' href='#n625'>625</a>
<a id='n626' href='#n626'>626</a>
<a id='n627' href='#n627'>627</a>
<a id='n628' href='#n628'>628</a>
<a id='n629' href='#n629'>629</a>
<a id='n630' href='#n630'>630</a>
<a id='n631' href='#n631'>631</a>
<a id='n632' href='#n632'>632</a>
<a id='n633' href='#n633'>633</a>
<a id='n634' href='#n634'>634</a>
<a id='n635' href='#n635'>635</a>
<a id='n636' href='#n636'>636</a>
<a id='n637' href='#n637'>637</a>
<a id='n638' href='#n638'>638</a>
<a id='n639' href='#n639'>639</a>
<a id='n640' href='#n640'>640</a>
<a id='n641' href='#n641'>641</a>
<a id='n642' href='#n642'>642</a>
<a id='n643' href='#n643'>643</a>
<a id='n644' href='#n644'>644</a>
<a id='n645' href='#n645'>645</a>
<a id='n646' href='#n646'>646</a>
<a id='n647' href='#n647'>647</a>
<a id='n648' href='#n648'>648</a>
<a id='n649' href='#n649'>649</a>
<a id='n650' href='#n650'>650</a>
<a id='n651' href='#n651'>651</a>
<a id='n652' href='#n652'>652</a>
<a id='n653' href='#n653'>653</a>
<a id='n654' href='#n654'>654</a>
<a id='n655' href='#n655'>655</a>
<a id='n656' href='#n656'>656</a>
<a id='n657' href='#n657'>657</a>
<a id='n658' href='#n658'>658</a>
<a id='n659' href='#n659'>659</a>
<a id='n660' href='#n660'>660</a>
<a id='n661' href='#n661'>661</a>
<a id='n662' href='#n662'>662</a>
<a id='n663' href='#n663'>663</a>
<a id='n664' href='#n664'>664</a>
<a id='n665' href='#n665'>665</a>
<a id='n666' href='#n666'>666</a>
<a id='n667' href='#n667'>667</a>
<a id='n668' href='#n668'>668</a>
<a id='n669' href='#n669'>669</a>
<a id='n670' href='#n670'>670</a>
<a id='n671' href='#n671'>671</a>
<a id='n672' href='#n672'>672</a>
<a id='n673' href='#n673'>673</a>
<a id='n674' href='#n674'>674</a>
<a id='n675' href='#n675'>675</a>
<a id='n676' href='#n676'>676</a>
<a id='n677' href='#n677'>677</a>
<a id='n678' href='#n678'>678</a>
<a id='n679' href='#n679'>679</a>
<a id='n680' href='#n680'>680</a>
<a id='n681' href='#n681'>681</a>
<a id='n682' href='#n682'>682</a>
<a id='n683' href='#n683'>683</a>
<a id='n684' href='#n684'>684</a>
<a id='n685' href='#n685'>685</a>
<a id='n686' href='#n686'>686</a>
<a id='n687' href='#n687'>687</a>
<a id='n688' href='#n688'>688</a>
<a id='n689' href='#n689'>689</a>
<a id='n690' href='#n690'>690</a>
<a id='n691' href='#n691'>691</a>
<a id='n692' href='#n692'>692</a>
<a id='n693' href='#n693'>693</a>
<a id='n694' href='#n694'>694</a>
<a id='n695' href='#n695'>695</a>
<a id='n696' href='#n696'>696</a>
<a id='n697' href='#n697'>697</a>
<a id='n698' href='#n698'>698</a>
<a id='n699' href='#n699'>699</a>
<a id='n700' href='#n700'>700</a>
<a id='n701' href='#n701'>701</a>
<a id='n702' href='#n702'>702</a>
<a id='n703' href='#n703'>703</a>
<a id='n704' href='#n704'>704</a>
<a id='n705' href='#n705'>705</a>
<a id='n706' href='#n706'>706</a>
<a id='n707' href='#n707'>707</a>
<a id='n708' href='#n708'>708</a>
<a id='n709' href='#n709'>709</a>
<a id='n710' href='#n710'>710</a>
<a id='n711' href='#n711'>711</a>
<a id='n712' href='#n712'>712</a>
<a id='n713' href='#n713'>713</a>
<a id='n714' href='#n714'>714</a>
<a id='n715' href='#n715'>715</a>
<a id='n716' href='#n716'>716</a>
<a id='n717' href='#n717'>717</a>
<a id='n718' href='#n718'>718</a>
<a id='n719' href='#n719'>719</a>
<a id='n720' href='#n720'>720</a>
<a id='n721' href='#n721'>721</a>
<a id='n722' href='#n722'>722</a>
<a id='n723' href='#n723'>723</a>
<a id='n724' href='#n724'>724</a>
<a id='n725' href='#n725'>725</a>
<a id='n726' href='#n726'>726</a>
<a id='n727' href='#n727'>727</a>
<a id='n728' href='#n728'>728</a>
<a id='n729' href='#n729'>729</a>
<a id='n730' href='#n730'>730</a>
<a id='n731' href='#n731'>731</a>
<a id='n732' href='#n732'>732</a>
<a id='n733' href='#n733'>733</a>
<a id='n734' href='#n734'>734</a>
<a id='n735' href='#n735'>735</a>
<a id='n736' href='#n736'>736</a>
<a id='n737' href='#n737'>737</a>
<a id='n738' href='#n738'>738</a>
<a id='n739' href='#n739'>739</a>
<a id='n740' href='#n740'>740</a>
<a id='n741' href='#n741'>741</a>
<a id='n742' href='#n742'>742</a>
<a id='n743' href='#n743'>743</a>
<a id='n744' href='#n744'>744</a>
<a id='n745' href='#n745'>745</a>
<a id='n746' href='#n746'>746</a>
<a id='n747' href='#n747'>747</a>
<a id='n748' href='#n748'>748</a>
<a id='n749' href='#n749'>749</a>
<a id='n750' href='#n750'>750</a>
<a id='n751' href='#n751'>751</a>
<a id='n752' href='#n752'>752</a>
<a id='n753' href='#n753'>753</a>
<a id='n754' href='#n754'>754</a>
<a id='n755' href='#n755'>755</a>
<a id='n756' href='#n756'>756</a>
<a id='n757' href='#n757'>757</a>
<a id='n758' href='#n758'>758</a>
<a id='n759' href='#n759'>759</a>
<a id='n760' href='#n760'>760</a>
<a id='n761' href='#n761'>761</a>
<a id='n762' href='#n762'>762</a>
<a id='n763' href='#n763'>763</a>
<a id='n764' href='#n764'>764</a>
<a id='n765' href='#n765'>765</a>
<a id='n766' href='#n766'>766</a>
<a id='n767' href='#n767'>767</a>
<a id='n768' href='#n768'>768</a>
<a id='n769' href='#n769'>769</a>
<a id='n770' href='#n770'>770</a>
<a id='n771' href='#n771'>771</a>
<a id='n772' href='#n772'>772</a>
<a id='n773' href='#n773'>773</a>
<a id='n774' href='#n774'>774</a>
<a id='n775' href='#n775'>775</a>
<a id='n776' href='#n776'>776</a>
<a id='n777' href='#n777'>777</a>
<a id='n778' href='#n778'>778</a>
<a id='n779' href='#n779'>779</a>
<a id='n780' href='#n780'>780</a>
<a id='n781' href='#n781'>781</a>
<a id='n782' href='#n782'>782</a>
<a id='n783' href='#n783'>783</a>
<a id='n784' href='#n784'>784</a>
<a id='n785' href='#n785'>785</a>
<a id='n786' href='#n786'>786</a>
<a id='n787' href='#n787'>787</a>
<a id='n788' href='#n788'>788</a>
<a id='n789' href='#n789'>789</a>
<a id='n790' href='#n790'>790</a>
<a id='n791' href='#n791'>791</a>
<a id='n792' href='#n792'>792</a>
<a id='n793' href='#n793'>793</a>
<a id='n794' href='#n794'>794</a>
<a id='n795' href='#n795'>795</a>
<a id='n796' href='#n796'>796</a>
<a id='n797' href='#n797'>797</a>
<a id='n798' href='#n798'>798</a>
<a id='n799' href='#n799'>799</a>
<a id='n800' href='#n800'>800</a>
<a id='n801' href='#n801'>801</a>
<a id='n802' href='#n802'>802</a>
<a id='n803' href='#n803'>803</a>
<a id='n804' href='#n804'>804</a>
<a id='n805' href='#n805'>805</a>
<a id='n806' href='#n806'>806</a>
<a id='n807' href='#n807'>807</a>
<a id='n808' href='#n808'>808</a>
<a id='n809' href='#n809'>809</a>
<a id='n810' href='#n810'>810</a>
<a id='n811' href='#n811'>811</a>
<a id='n812' href='#n812'>812</a>
<a id='n813' href='#n813'>813</a>
<a id='n814' href='#n814'>814</a>
<a id='n815' href='#n815'>815</a>
<a id='n816' href='#n816'>816</a>
</pre></td>
<td class='lines'><pre><code><style>.highlight .hll { background-color: #ffffcc }
.highlight  { background: #ffffff; }
.highlight .c { color: #888888 } /* Comment */
.highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */
.highlight .k { color: #008800; font-weight: bold } /* Keyword */
.highlight .cm { color: #888888 } /* Comment.Multiline */
.highlight .cp { color: #cc0000; font-weight: bold } /* Comment.Preproc */
.highlight .c1 { color: #888888 } /* Comment.Single */
.highlight .cs { color: #cc0000; font-weight: bold; background-color: #fff0f0 } /* Comment.Special */
.highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #aa0000 } /* Generic.Error */
.highlight .gh { color: #303030 } /* Generic.Heading */
.highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #555555 } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #606060 } /* Generic.Subheading */
.highlight .gt { color: #aa0000 } /* Generic.Traceback */
.highlight .kc { color: #008800; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #008800; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #008800; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #008800 } /* Keyword.Pseudo */
.highlight .kr { color: #008800; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #888888; font-weight: bold } /* Keyword.Type */
.highlight .m { color: #0000DD; font-weight: bold } /* Literal.Number */
.highlight .s { color: #dd2200; background-color: #fff0f0 } /* Literal.String */
.highlight .na { color: #336699 } /* Name.Attribute */
.highlight .nb { color: #003388 } /* Name.Builtin */
.highlight .nc { color: #bb0066; font-weight: bold } /* Name.Class */
.highlight .no { color: #003366; font-weight: bold } /* Name.Constant */
.highlight .nd { color: #555555 } /* Name.Decorator */
.highlight .ne { color: #bb0066; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #0066bb; font-weight: bold } /* Name.Function */
.highlight .nl { color: #336699; font-style: italic } /* Name.Label */
.highlight .nn { color: #bb0066; font-weight: bold } /* Name.Namespace */
.highlight .py { color: #336699; font-weight: bold } /* Name.Property */
.highlight .nt { color: #bb0066; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #336699 } /* Name.Variable */
.highlight .ow { color: #008800 } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mf { color: #0000DD; font-weight: bold } /* Literal.Number.Float */
.highlight .mh { color: #0000DD; font-weight: bold } /* Literal.Number.Hex */
.highlight .mi { color: #0000DD; font-weight: bold } /* Literal.Number.Integer */
.highlight .mo { color: #0000DD; font-weight: bold } /* Literal.Number.Oct */
.highlight .sb { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Backtick */
.highlight .sc { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Char */
.highlight .sd { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Doc */
.highlight .s2 { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Double */
.highlight .se { color: #0044dd; background-color: #fff0f0 } /* Literal.String.Escape */
.highlight .sh { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Heredoc */
.highlight .si { color: #3333bb; background-color: #fff0f0 } /* Literal.String.Interpol */
.highlight .sx { color: #22bb22; background-color: #f0fff0 } /* Literal.String.Other */
.highlight .sr { color: #008800; background-color: #fff0ff } /* Literal.String.Regex */
.highlight .s1 { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Single */
.highlight .ss { color: #aa6600; background-color: #fff0f0 } /* Literal.String.Symbol */
.highlight .bp { color: #003388 } /* Name.Builtin.Pseudo */
.highlight .vc { color: #336699 } /* Name.Variable.Class */
.highlight .vg { color: #dd7700 } /* Name.Variable.Global */
.highlight .vi { color: #3333bb } /* Name.Variable.Instance */
.highlight .il { color: #0000DD; font-weight: bold } /* Literal.Number.Integer.Long */</style><div class="highlight"><pre><span class="cp">&lt;?</span><span class="nx">xml</span> <span class="nx">version</span><span class="o">=</span><span class="s2">&quot;1.0&quot;</span> <span class="nx">encoding</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span> <span class="cp">?&gt;</span>
<span class="c">&lt;!--</span>
<span class="c"> Licensed to the Apache Software Foundation (ASF) under one or more</span>
<span class="c"> contributor license agreements.  See the NOTICE file distributed with</span>
<span class="c"> this work for additional information regarding copyright ownership.</span>
<span class="c"> The ASF licenses this file to You under the Apache License, Version 2.0</span>
<span class="c"> (the &quot;License&quot;); you may not use this file except in compliance with</span>
<span class="c"> the License.  You may obtain a copy of the License at</span>

<span class="c">     http://www.apache.org/licenses/LICENSE-2.0</span>

<span class="c"> Unless required by applicable law or agreed to in writing, software</span>
<span class="c"> distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<span class="c"> WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<span class="c"> See the License for the specific language governing permissions and</span>
<span class="c"> limitations under the License.</span>
<span class="c">--&gt;</span>
<span class="cp">&lt;!DOCTYPE schema [</span>
<span class="cp">  &lt;!ENTITY extrafields SYSTEM &quot;schema_extra_fields.xml&quot;&gt;</span>
  <span class="cp">&lt;!ENTITY extratypes SYSTEM &quot;schema_extra_types.xml&quot;&gt;</span>
]&gt;

<span class="c">&lt;!--</span>
<span class="c"> This is the Solr schema file. This file should be named &quot;schema.xml&quot; and</span>
<span class="c"> should be in the conf directory under the solr home</span>
<span class="c"> (i.e. ./solr/conf/schema.xml by default)</span>
<span class="c"> or located where the classloader for the Solr webapp can find it.</span>

<span class="c"> This example schema is the recommended starting point for users.</span>
<span class="c"> It should be kept correct and concise, usable out-of-the-box.</span>

<span class="c"> For more information, on how to customize this file, please see</span>
<span class="c"> http://wiki.apache.org/solr/SchemaXml</span>

<span class="c"> PERFORMANCE NOTE: this schema includes many optional features and should not</span>
<span class="c"> be used for benchmarking.  To improve performance one could</span>
<span class="c">  - set stored=&quot;false&quot; for all fields possible (esp large fields) when you</span>
<span class="c">    only need to search on the field but don&#39;t need to return the original</span>
<span class="c">    value.</span>
<span class="c">  - set indexed=&quot;false&quot; if you don&#39;t need to search on the field, but only</span>
<span class="c">    return the field as a result of searching on other indexed fields.</span>
<span class="c">  - remove all unneeded copyField statements</span>
<span class="c">  - for best index size and searching performance, set &quot;index&quot; to false</span>
<span class="c">    for all general text fields, use copyField to copy them to the</span>
<span class="c">    catchall &quot;text&quot; field, and use that for searching.</span>
<span class="c">  - For maximum indexing performance, use the ConcurrentUpdateSolrServer</span>
<span class="c">    java client.</span>
<span class="c">  - Remember to run the JVM in server mode, and use a higher logging level</span>
<span class="c">    that avoids logging every request</span>
<span class="c">--&gt;</span>

<span class="nt">&lt;schema</span> <span class="na">name=</span><span class="s">&quot;drupal-6.0-solr-7.x&quot;</span> <span class="na">version=</span><span class="s">&quot;1.6&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- attribute &quot;name&quot; is the name of this schema and is only used for display purposes.</span>
<span class="c">       version=&quot;x.y&quot; is Solr&#39;s version number for the schema syntax and</span>
<span class="c">       semantics.  It should not normally be changed by applications.</span>

<span class="c">       1.0: multiValued attribute did not exist, all fields are multiValued</span>
<span class="c">            by nature</span>
<span class="c">       1.1: multiValued attribute introduced, false by default</span>
<span class="c">       1.2: omitTermFreqAndPositions attribute introduced, true by default</span>
<span class="c">            except for text fields.</span>
<span class="c">       1.3: removed optional field compress feature</span>
<span class="c">       1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser</span>
<span class="c">            behavior when a single string produces multiple tokens.  Defaults</span>
<span class="c">            to off for version &gt;= 1.4</span>
<span class="c">       1.5: omitNorms defaults to true for primitive field types</span>
<span class="c">            (int, float, boolean, string...)</span>
<span class="c">       1.6: useDocValuesAsStored defaults to true.</span>
<span class="c">     --&gt;</span>


   <span class="c">&lt;!-- Valid attributes for fields:</span>
<span class="c">     name: mandatory - the name for the field</span>
<span class="c">     type: mandatory - the name of a field type from the</span>
<span class="c">       &lt;types&gt; fieldType section</span>
<span class="c">     indexed: true if this field should be indexed (searchable or sortable)</span>
<span class="c">     stored: true if this field should be retrievable</span>
<span class="c">     docValues: true if this field should have doc values. Doc values are</span>
<span class="c">       useful (required, if you are using *Point fields) for faceting,</span>
<span class="c">       grouping, sorting and function queries. Doc values will make the index</span>
<span class="c">       faster to load, more NRT-friendly and more memory-efficient.</span>
<span class="c">       They however come with some limitations: they are currently only</span>
<span class="c">       supported by StrField, UUIDField, all *PointFields, and depending</span>
<span class="c">       on the field type, they might require the field to be single-valued,</span>
<span class="c">       be required or have a default value (check the documentation</span>
<span class="c">       of the field type you&#39;re interested in for more information)</span>
<span class="c">     multiValued: true if this field may contain multiple values per document</span>
<span class="c">     omitNorms: (expert) set to true to omit the norms associated with</span>
<span class="c">       this field (this disables length normalization and index-time</span>
<span class="c">       boosting for the field, and saves some memory).  Only full-text</span>
<span class="c">       fields or fields that need an index-time boost need norms.</span>
<span class="c">       Norms are omitted for primitive (non-analyzed) types by default.</span>
<span class="c">     termVectors: [false] set to true to store the term vector for a</span>
<span class="c">       given field.</span>
<span class="c">       When using MoreLikeThis, fields used for similarity should be</span>
<span class="c">       stored for best performance.</span>
<span class="c">     termPositions: Store position information with the term vector.</span>
<span class="c">       This will increase storage costs.</span>
<span class="c">     termOffsets: Store offset information with the term vector. This</span>
<span class="c">       will increase storage costs.</span>
<span class="c">     required: The field is required.  It will throw an error if the</span>
<span class="c">       value does not exist</span>
<span class="c">     default: a value that should be used if no value is specified</span>
<span class="c">       when adding a document.</span>
<span class="c">   --&gt;</span>

   <span class="c">&lt;!-- field names should consist of alphanumeric or underscore characters only and</span>
<span class="c">      not start with a digit.  This is not currently strictly enforced,</span>
<span class="c">      but other field names will not have first class support from all components</span>
<span class="c">      and back compatibility is not guaranteed.  Names with both leading and</span>
<span class="c">      trailing underscores (e.g. _version_) are reserved.</span>
<span class="c">   --&gt;</span>

   <span class="c">&lt;!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml</span>
<span class="c">      or Solr won&#39;t start. _version_ and update log are required for SolrCloud</span>
<span class="c">   --&gt;</span>
   <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;_version_&quot;</span> <span class="na">type=</span><span class="s">&quot;plong&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

   <span class="c">&lt;!-- points to the root document of a block of nested documents. Required for nested</span>
<span class="c">      document support, may be removed otherwise</span>
<span class="c">   --&gt;</span>
   <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;_root_&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Only remove the &quot;id&quot; field if you have a very good reason to. While not strictly</span>
<span class="c">  required, it is highly recommended. A &lt;uniqueKey&gt; is present in almost all Solr</span>
<span class="c">  installations. See the &lt;uniqueKey&gt; declaration below where &lt;uniqueKey&gt; is set to &quot;id&quot;.</span>
<span class="c">  --&gt;</span>
  <span class="c">&lt;!-- The document id is usually derived from a site-spcific key (hash) and the</span>
<span class="c">    entity type and ID like:</span>
<span class="c">    Search Api 7.x:</span>
<span class="c">      The format used is $document-&gt;id = $index_id . &#39;-&#39; . $item_id</span>
<span class="c">    Search Api 8.x:</span>
<span class="c">      The format used is $document-&gt;id = $site_hash . &#39;-&#39; . $index_id . &#39;-&#39; . $item_id</span>
<span class="c">    Apache Solr Search Integration 7.x:</span>
<span class="c">      The format used is $document-&gt;id = $site_hash . &#39;/&#39; . $entity_type . &#39;/&#39; . $entity-&gt;id;</span>
<span class="c">  --&gt;</span>
  <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;id&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Search Api specific fields --&gt;</span>
  <span class="c">&lt;!-- index_id is the machine name of the search index this entry belongs to. --&gt;</span>
  <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;index_id&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Here, default is used to create a &quot;timestamp&quot; field indicating</span>
<span class="c">       when each document was indexed.--&gt;</span>
  <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;timestamp&quot;</span> <span class="na">type=</span><span class="s">&quot;pdate&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">default=</span><span class="s">&quot;NOW&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- This field is used to build the spellchecker index --&gt;</span>
  <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;spell&quot;</span> <span class="na">type=</span><span class="s">&quot;textSpell&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;site&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;hash&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- copyField commands copy one field to another at the time a document</span>
<span class="c">       is added to the index.  It&#39;s used either to index the same field differently,</span>
<span class="c">       or to add multiple fields to the same field for easier/faster searching.  --&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;ts_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;spell&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tm_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;spell&quot;</span><span class="nt">/&gt;</span>

  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;ts_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tm_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tos_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tom_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tus_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tum_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tes_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tem_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;tws_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;twm_*&quot;</span> <span class="na">dest=</span><span class="s">&quot;sm_suggest&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Dynamic field definitions.  If a field name is not found, dynamicFields</span>
<span class="c">       will be used if the name matches any of the patterns.</span>
<span class="c">       RESTRICTION: the glob-like pattern in the name attribute must have</span>
<span class="c">       a &quot;*&quot; only at the start or the end.</span>
<span class="c">       EXAMPLE:  name=&quot;*_i&quot; will match any field ending in _i (like myid_i, z_i)</span>
<span class="c">       Longer patterns will be matched first.  if equal size patterns</span>
<span class="c">       both match, the first appearing in the schema will be used.  --&gt;</span>

  <span class="c">&lt;!-- For 2 and 3 letter prefix dynamic fields, the 1st letter indicates the data type and</span>
<span class="c">       the last letter is &#39;s&#39; for single valued, &#39;m&#39; for multi-valued --&gt;</span>

  <span class="c">&lt;!-- We use plong for integer since 64 bit ints are now common in PHP. --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;is_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;plong&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;im_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;plong&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- List of floats can be saved in a regular float field --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;fs_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;pfloat&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;fm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;pfloat&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- List of doubles can be saved in a regular double field --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ps_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;pdouble&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;pm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;pdouble&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- List of booleans can be saved in a regular boolean field --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;bm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;boolean&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;bs_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;boolean&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Regular text (without processing) can be stored in a string field--&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ss_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;string&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;sm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;string&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ses_*&quot;</span> <span class="na">type=</span><span class="s">&quot;edge_n2_kw_string&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;sem_*&quot;</span> <span class="na">type=</span><span class="s">&quot;edge_n2_kw_string&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Normal text fields are for full text - the relevance of a match depends on the length of the text --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ts_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;text&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="na">termVectors=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;text&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="na">termVectors=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Unstemmed text fields for full text - the relevance of a match depends on the length of the text --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tus_*&quot;</span> <span class="na">type=</span><span class="s">&quot;text_und&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="na">termVectors=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tum_*&quot;</span> <span class="na">type=</span><span class="s">&quot;text_und&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="na">termVectors=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- These text fields omit norms - useful for extracted text like taxonomy_names --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tos_*&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="na">termVectors=</span><span class="s">&quot;true&quot;</span> <span class="na">omitNorms=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tom_*&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="na">termVectors=</span><span class="s">&quot;true&quot;</span> <span class="na">omitNorms=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Special-purpose text fields --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tes_*&quot;</span> <span class="na">type=</span><span class="s">&quot;edge_n2_kw_text&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="na">omitTermFreqAndPositions=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tem_*&quot;</span> <span class="na">type=</span><span class="s">&quot;edge_n2_kw_text&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="na">omitTermFreqAndPositions=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;tws_*&quot;</span> <span class="na">type=</span><span class="s">&quot;text_ws&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;twm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;text_ws&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Trie fields are deprecated. Point fields solve all needs. But we keep the dedicated field names for backward compatibility. --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ds_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;pdate&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;dm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;pdate&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;its_*&quot;</span> <span class="na">type=</span><span class="s">&quot;plong&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;itm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;plong&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;fts_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pfloat&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ftm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pfloat&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;pts_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pdouble&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ptm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pdouble&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Binary fields can be populated using base64 encoded data. Useful e.g. for embedding</span>
<span class="c">       a small image in a search result using the data URI scheme --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;xs_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;binary&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;false&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;xm_*&quot;</span>  <span class="na">type=</span><span class="s">&quot;binary&quot;</span>  <span class="na">indexed=</span><span class="s">&quot;false&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Trie fields are deprecated. Point fields solve all needs. But we keep the dedicated field names for backward compatibility. --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;dds_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pdate&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;ddm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pdate&quot;</span>    <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- In case a 32 bit int is really needed, we provide these fields. &#39;h&#39; is mnemonic for &#39;half word&#39;, i.e. 32 bit on 64 arch --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;hs_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pint&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;hm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pint&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Trie fields are deprecated. Point fields solve all needs. But we keep the dedicated field names for backward compatibility. --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;hts_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pint&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;htm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pint&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Unindexed string fields that can be used to store values that won&#39;t be searchable --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;zs_*&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;false&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;zm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span>   <span class="na">indexed=</span><span class="s">&quot;false&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Fields for location searches.</span>
<span class="c">       http://wiki.apache.org/solr/SpatialSearch#geodist_-_The_distance_function --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;points_*&quot;</span> <span class="na">type=</span><span class="s">&quot;point&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;pointm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;point&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;locs_*&quot;</span> <span class="na">type=</span><span class="s">&quot;location&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;locm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;location&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;geos_*&quot;</span> <span class="na">type=</span><span class="s">&quot;geohash&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;geom_*&quot;</span> <span class="na">type=</span><span class="s">&quot;geohash&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span>  <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;bboxs_*&quot;</span> <span class="na">type=</span><span class="s">&quot;bbox&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;bboxm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;bbox&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;rpts_*&quot;</span> <span class="na">type=</span><span class="s">&quot;location_rpt&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;rptm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;location_rpt&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Special fields for Solr 5 functionality. --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;phons_*&quot;</span> <span class="na">type=</span><span class="s">&quot;phonetic&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;phonm_*&quot;</span> <span class="na">type=</span><span class="s">&quot;phonetic&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>

  <span class="c">&lt;!-- External file fields --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;eff_*&quot;</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Sortable version of the dynamic string field --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;sort_*&quot;</span> <span class="na">type=</span><span class="s">&quot;sortString&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- A random sort field --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;random_*&quot;</span> <span class="na">type=</span><span class="s">&quot;random&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- This field is used to store access information (e.g. node access grants), as opposed to field data --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;access_*&quot;</span> <span class="na">type=</span><span class="s">&quot;pint&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- The following causes solr to ignore any fields that don&#39;t already match an existing</span>
<span class="c">       field name or dynamic field, rather than reporting them as an error.</span>
<span class="c">       Alternately, change the type=&quot;ignored&quot; to some other type e.g. &quot;text&quot; if you want</span>
<span class="c">       unknown fields indexed and/or stored by default --&gt;</span>
  <span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;*&quot;</span> <span class="na">type=</span><span class="s">&quot;ignored&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>


    <span class="c">&lt;!-- field type definitions. The &quot;name&quot; attribute is</span>
<span class="c">       just a label to be used by field definitions.  The &quot;class&quot;</span>
<span class="c">       attribute and any other attributes determine the real</span>
<span class="c">       behavior of the fieldType.</span>
<span class="c">         Class names starting with &quot;solr&quot; refer to java classes in a</span>
<span class="c">       standard package such as org.apache.solr.analysis</span>
<span class="c">    --&gt;</span>

    <span class="c">&lt;!-- The StrField type is not analyzed, but indexed/stored verbatim.</span>
<span class="c">       It supports doc values but in that case the field needs to be</span>
<span class="c">       single-valued and either required or have a default value.</span>
<span class="c">      --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;string&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.StrField&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!-- boolean type: &quot;true&quot; or &quot;false&quot; --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;boolean&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.BoolField&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!-- sortMissingLast and sortMissingFirst attributes are optional attributes are</span>
<span class="c">         currently supported on types that are sorted internally as strings</span>
<span class="c">         and on numeric types.</span>
<span class="c">         This includes &quot;string&quot;, &quot;boolean&quot;, &quot;pint&quot;, &quot;pfloat&quot;, &quot;plong&quot;, &quot;pdate&quot;, &quot;pdouble&quot;.</span>
<span class="c">       - If sortMissingLast=&quot;true&quot;, then a sort on this field will cause documents</span>
<span class="c">         without the field to come after documents with the field,</span>
<span class="c">         regardless of the requested sort order (asc or desc).</span>
<span class="c">       - If sortMissingFirst=&quot;true&quot;, then a sort on this field will cause documents</span>
<span class="c">         without the field to come before documents with the field,</span>
<span class="c">         regardless of the requested sort order.</span>
<span class="c">       - If sortMissingLast=&quot;false&quot; and sortMissingFirst=&quot;false&quot; (the default),</span>
<span class="c">         then default lucene sorting will be used which places docs without the</span>
<span class="c">         field first in an ascending sort and last in a descending sort.</span>
<span class="c">    --&gt;</span>

    <span class="c">&lt;!--</span>
<span class="c">      Numeric field types that index values using KD-trees.</span>
<span class="c">      Point fields don&#39;t support FieldCache, so they must have docValues=&quot;true&quot; if needed for sorting, faceting, functions, etc.</span>
<span class="c">    --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pint&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.IntPointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pfloat&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.FloatPointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;plong&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.LongPointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pdouble&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.DoublePointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pints&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.IntPointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pfloats&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.FloatPointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;plongs&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.LongPointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pdoubles&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.DoublePointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!--</span>
<span class="c">     The ExternalFileField type gets values from an external file instead of the</span>
<span class="c">     index. This is useful for data such as rankings that might change frequently</span>
<span class="c">     and require different update frequencies than the documents they are</span>
<span class="c">     associated with.</span>
<span class="c">    --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;file&quot;</span> <span class="na">keyField=</span><span class="s">&quot;id&quot;</span> <span class="na">defVal=</span><span class="s">&quot;1&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span> <span class="na">indexed=</span><span class="s">&quot;false&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.ExternalFileField&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and</span>
<span class="c">         is a more restricted form of the canonical representation of dateTime</span>
<span class="c">         http://www.w3.org/TR/xmlschema-2/#dateTime</span>
<span class="c">         The trailing &quot;Z&quot; designates UTC time and is mandatory.</span>
<span class="c">         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z</span>
<span class="c">         All other components are mandatory.</span>

<span class="c">         Expressions can also be used to denote calculations that should be</span>
<span class="c">         performed relative to &quot;NOW&quot; to determine the value, ie...</span>

<span class="c">               NOW/HOUR</span>
<span class="c">                  ... Round to the start of the current hour</span>
<span class="c">               NOW-1DAY</span>
<span class="c">                  ... Exactly 1 day prior to now</span>
<span class="c">               NOW/DAY+6MONTHS+3DAYS</span>
<span class="c">                  ... 6 months and 3 days in the future from the start of</span>
<span class="c">                      the current day</span>

<span class="c">         Consult the DatePointField javadocs for more information.</span>
<span class="c">      --&gt;</span>
    <span class="c">&lt;!-- KD-tree versions of date fields --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pdate&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.DatePointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;pdates&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.DatePointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;binary&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.BinaryField&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!-- The &quot;RandomSortField&quot; is not used to store or search any</span>
<span class="c">         data.  You can declare fields of this type it in your schema</span>
<span class="c">         to generate pseudo-random orderings of your docs for sorting</span>
<span class="c">         or function purposes.  The ordering is generated based on the field</span>
<span class="c">         name and the version of the index. As long as the index version</span>
<span class="c">         remains unchanged, and the same field name is reused,</span>
<span class="c">         the ordering of the docs will be consistent.</span>
<span class="c">         If you want different psuedo-random orderings of documents,</span>
<span class="c">         for the same version of the index, use a dynamicField and</span>
<span class="c">         change the field name in the request.</span>
<span class="c">     --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;random&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.RandomSortField&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>

    <span class="c">&lt;!-- solr.TextField allows the specification of custom text analyzers</span>
<span class="c">         specified as a tokenizer and a list of token filters. Different</span>
<span class="c">         analyzers may be specified for indexing and querying.</span>

<span class="c">         The optional positionIncrementGap puts space between multiple fields of</span>
<span class="c">         this type on the same document, with the purpose of preventing false phrase</span>
<span class="c">         matching across fields.</span>

<span class="c">         For more info on customizing your analyzer chain, please see</span>
<span class="c">         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters</span>
<span class="c">     --&gt;</span>

    <span class="c">&lt;!-- One can also specify an existing Analyzer class that has a</span>
<span class="c">         default constructor via the class attribute on the analyzer element.</span>
<span class="c">         Example:</span>
<span class="c">    &lt;fieldType name=&quot;text_greek&quot; class=&quot;solr.TextField&quot;&gt;</span>
<span class="c">      &lt;analyzer class=&quot;org.apache.lucene.analysis.el.GreekAnalyzer&quot;/&gt;</span>
<span class="c">    &lt;/fieldType&gt;</span>
<span class="c">    --&gt;</span>

    <span class="c">&lt;!-- A text field that only splits on whitespace for exact matching of words --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;text_ws&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">omitNorms=</span><span class="s">&quot;true&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- A text field that uses WordDelimiterFilter to enable splitting and matching of</span>
<span class="c">        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,</span>
<span class="c">        so that a query of &quot;wifi&quot; or &quot;wi fi&quot; could match a document containing &quot;Wi-Fi&quot;.</span>
<span class="c">        Synonyms and stopwords are customized by external files, and stemming is enabled.</span>
<span class="c">        Duplicate tokens at the same position (which may result from Stemmed Synonyms or</span>
<span class="c">        WordDelim parts) are removed.</span>
<span class="c">        --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;charFilter</span> <span class="na">class=</span><span class="s">&quot;solr.MappingCharFilterFactory&quot;</span> <span class="na">mapping=</span><span class="s">&quot;mapping-ISOLatin1Accent.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!-- in this example, we will only use synonyms at query time</span>
<span class="c">        &lt;filter class=&quot;solr.SynonymFilterFactory&quot; synonyms=&quot;index_synonyms.txt&quot; ignoreCase=&quot;true&quot; expand=&quot;false&quot;/&gt;</span>
<span class="c">        --&gt;</span>
        <span class="c">&lt;!-- Case insensitive stop word removal. --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
                <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;0&quot;</span>
                <span class="na">preserveOriginal=</span><span class="s">&quot;1&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="na">language=</span><span class="s">&quot;English&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;charFilter</span> <span class="na">class=</span><span class="s">&quot;solr.MappingCharFilterFactory&quot;</span> <span class="na">mapping=</span><span class="s">&quot;mapping-ISOLatin1Accent.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
                <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;0&quot;</span>
                <span class="na">preserveOriginal=</span><span class="s">&quot;1&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="na">language=</span><span class="s">&quot;English&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;multiterm&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;charFilter</span> <span class="na">class=</span><span class="s">&quot;solr.MappingCharFilterFactory&quot;</span> <span class="na">mapping=</span><span class="s">&quot;mapping-ISOLatin1Accent.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
                <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;1&quot;</span>
                <span class="na">preserveOriginal=</span><span class="s">&quot;1&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="na">language=</span><span class="s">&quot;English&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- An unstemmed text field - good if one does not know the language of the field --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;text_und&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
                <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;multiterm&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
                <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;0&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;edge_n2_kw_text&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;charFilter</span> <span class="na">class=</span><span class="s">&quot;solr.MappingCharFilterFactory&quot;</span> <span class="na">mapping=</span><span class="s">&quot;mapping-ISOLatin1Accent.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!-- Case insensitive stop word removal. --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
        <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.WordDelimiterGraphFilterFactory&quot;</span>
                <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span>
                <span class="na">generateWordParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">generateNumberParts=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateWords=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateNumbers=</span><span class="s">&quot;1&quot;</span>
                <span class="na">catenateAll=</span><span class="s">&quot;0&quot;</span>
                <span class="na">splitOnCaseChange=</span><span class="s">&quot;0&quot;</span>
                <span class="na">preserveOriginal=</span><span class="s">&quot;1&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.EdgeNGramFilterFactory&quot;</span> <span class="na">minGramSize=</span><span class="s">&quot;2&quot;</span> <span class="na">maxGramSize=</span><span class="s">&quot;25&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;charFilter</span> <span class="na">class=</span><span class="s">&quot;solr.MappingCharFilterFactory&quot;</span> <span class="na">mapping=</span><span class="s">&quot;mapping-ISOLatin1Accent.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
        <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="na">language=</span><span class="s">&quot;English&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;multiterm&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;charFilter</span> <span class="na">class=</span><span class="s">&quot;solr.MappingCharFilterFactory&quot;</span> <span class="na">mapping=</span><span class="s">&quot;mapping-ISOLatin1Accent.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
                <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
                <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span>
        <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;2&quot;</span> <span class="na">max=</span><span class="s">&quot;100&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="na">language=</span><span class="s">&quot;English&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- Edge N gram type - for example for matching against queries with results</span>
<span class="c">        KeywordTokenizer leaves input string intact as a single term.</span>
<span class="c">        see: http://www.lucidimagination.com/blog/2009/09/08/auto-suggest-from-popular-queries-using-edgengrams/</span>
<span class="c">      --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;edge_n2_kw_string&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">omitNorms=</span><span class="s">&quot;true&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.EdgeNGramFilterFactory&quot;</span> <span class="na">minGramSize=</span><span class="s">&quot;2&quot;</span> <span class="na">maxGramSize=</span><span class="s">&quot;25&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!--  Setup simple analysis for spell checking --&gt;</span>
   <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;textSpell&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.StandardTokenizerFactory&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">words=</span><span class="s">&quot;stopwords.txt&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LengthFilterFactory&quot;</span> <span class="na">min=</span><span class="s">&quot;4&quot;</span> <span class="na">max=</span><span class="s">&quot;20&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- This is an example of using the KeywordTokenizer along</span>
<span class="c">         With various TokenFilterFactories to produce a sortable field</span>
<span class="c">         that does not include some properties of the source text</span>
<span class="c">      --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;alphaOnlySort&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">omitNorms=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="c">&lt;!-- KeywordTokenizer does no actual tokenizing, so the entire</span>
<span class="c">             input string is preserved as a single token</span>
<span class="c">          --&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!-- The LowerCase TokenFilter does what you expect, which can be</span>
<span class="c">             when you want your sorting to be case insensitive</span>
<span class="c">          --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span> <span class="nt">/&gt;</span>
        <span class="c">&lt;!-- The TrimFilter removes any leading or trailing whitespace --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.TrimFilterFactory&quot;</span> <span class="nt">/&gt;</span>
        <span class="c">&lt;!-- The PatternReplaceFilter gives you the flexibility to use</span>
<span class="c">             Java Regular expression to replace any sequence of characters</span>
<span class="c">             matching a pattern with an arbitrary replacement string,</span>
<span class="c">             which may include back references to portions of the original</span>
<span class="c">             string matched by the pattern.</span>

<span class="c">             See the Java Regular Expression documentation for more</span>
<span class="c">             information on pattern and replacement string syntax.</span>

<span class="c">             http://docs.oracle.com/javase/8/docs/api/java/util/regex/package-summary.html</span>
<span class="c">          --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.PatternReplaceFilterFactory&quot;</span>
                <span class="na">pattern=</span><span class="s">&quot;([^a-z])&quot;</span> <span class="na">replacement=</span><span class="s">&quot;&quot;</span> <span class="na">replace=</span><span class="s">&quot;all&quot;</span>
        <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- The Solr 6.x example file replaced the sortString type by alphaOnlySort</span>
<span class="c">         above. This one is not suitable for search_api_id which consists of</span>
<span class="c">         characters, numbers and punctuation, for example</span>
<span class="c">         &#39;entity:entity_test_mulrev_changed/2:en&#39;.</span>
<span class="c">     --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;sortString&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">omitNorms=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="c">&lt;!-- KeywordTokenizer does no actual tokenizing, so the entire</span>
<span class="c">            input string is preserved as a single token</span>
<span class="c">          --&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!-- The LowerCase TokenFilter does what you expect, which can be</span>
<span class="c">            when you want your sorting to be case insensitive</span>
<span class="c">          --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span> <span class="nt">/&gt;</span>
        <span class="c">&lt;!-- The TrimFilter removes any leading or trailing whitespace --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.TrimFilterFactory&quot;</span> <span class="nt">/&gt;</span>
        <span class="c">&lt;!-- The PatternReplaceFilter gives you the flexibility to use</span>
<span class="c">            Java Regular expression to replace any sequence of characters</span>
<span class="c">            matching a pattern with an arbitrary replacement string,</span>
<span class="c">            which may include back refrences to portions of the orriginal</span>
<span class="c">            string matched by the pattern.</span>

<span class="c">            See the Java Regular Expression documentation for more</span>
<span class="c">            infomation on pattern and replacement string syntax.</span>

<span class="c">            http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html</span>

<span class="c">        &lt;filter class=&quot;solr.PatternReplaceFilterFactory&quot;</span>
<span class="c">               pattern=&quot;(^\p{Punct}+)&quot; replacement=&quot;&quot; replace=&quot;all&quot;</span>
<span class="c">        /&gt;</span>
<span class="c">        --&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;phonetic&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.StandardTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.DoubleMetaphoneFilterFactory&quot;</span> <span class="na">inject=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;payloads&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.WhitespaceTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!--</span>
<span class="c">        The DelimitedPayloadTokenFilter can put payloads on tokens... for example,</span>
<span class="c">        a token of &quot;foo|1.4&quot;  would be indexed as &quot;foo&quot; with a payload of 1.4f</span>
<span class="c">        Attributes of the DelimitedPayloadTokenFilterFactory :</span>
<span class="c">         &quot;delimiter&quot; - a one character delimiter. Default is | (pipe)</span>
<span class="c">   &quot;encoder&quot; - how to encode the following value into a playload</span>
<span class="c">      float -&gt; org.apache.lucene.analysis.payloads.FloatEncoder,</span>
<span class="c">      integer -&gt; o.a.l.a.p.IntegerEncoder</span>
<span class="c">      identity -&gt; o.a.l.a.p.IdentityEncoder</span>
<span class="c">            Fully Qualified class name implementing PayloadEncoder, Encoder must have a no arg constructor.</span>
<span class="c">         --&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.DelimitedPayloadTokenFilterFactory&quot;</span> <span class="na">encoder=</span><span class="s">&quot;float&quot;</span><span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- lowercases the entire field value, keeping it as a single token.  --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;lowercase&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!--</span>
<span class="c">      Example of using PathHierarchyTokenizerFactory at index time, so</span>
<span class="c">      queries for paths match documents at that path, or in descendent paths</span>
<span class="c">    --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;descendent_path&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.PathHierarchyTokenizerFactory&quot;</span> <span class="na">delimiter=</span><span class="s">&quot;/&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>
    <span class="c">&lt;!--</span>
<span class="c">      Example of using PathHierarchyTokenizerFactory at query time, so</span>
<span class="c">      queries for paths match documents at that path, or in ancestor paths</span>
<span class="c">    --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;ancestor_path&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordTokenizerFactory&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
      <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.PathHierarchyTokenizerFactory&quot;</span> <span class="na">delimiter=</span><span class="s">&quot;/&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;/fieldType&gt;</span>

    <span class="c">&lt;!-- since fields of this type are by default not stored or indexed,</span>
<span class="c">         any data added to them will be ignored outright.  --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;ignored&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span> <span class="na">indexed=</span><span class="s">&quot;false&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.StrField&quot;</span> <span class="nt">/&gt;</span>

    <span class="c">&lt;!-- This point type indexes the coordinates as separate fields (subFields)</span>
<span class="c">      If subFieldType is defined, it references a type, and a dynamic field</span>
<span class="c">      definition is created matching *___&lt;typename&gt;.  Alternately, if</span>
<span class="c">      subFieldSuffix is defined, that is used to create the subFields.</span>
<span class="c">      Example: if subFieldType=&quot;double&quot;, then the coordinates would be</span>
<span class="c">        indexed in fields myloc_0___double,myloc_1___double.</span>
<span class="c">      Example: if subFieldSuffix=&quot;_d&quot; then the coordinates would be indexed</span>
<span class="c">        in fields myloc_0_d,myloc_1_d</span>
<span class="c">      The subFields are an implementation detail of the fieldType, and end</span>
<span class="c">      users normally should not need to know about them.</span>
<span class="c">     --&gt;</span>
    <span class="c">&lt;!-- In Drupal we only use prefixes for dynmaic fields. Tht might change in</span>
<span class="c">      the future but for now we keep this pattern.</span>
<span class="c">    --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;point&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.PointType&quot;</span> <span class="na">dimension=</span><span class="s">&quot;2&quot;</span> <span class="na">subFieldType=</span><span class="s">&quot;pdouble&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;location&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.LatLonType&quot;</span>  <span class="na">subFieldType=</span><span class="s">&quot;pdouble&quot;</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.</span>
<span class="c">      For more information about this and other Spatial fields new to Solr 4, see:</span>
<span class="c">      http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4</span>
<span class="c">    --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;location_rpt&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.SpatialRecursivePrefixTreeFieldType&quot;</span>
        <span class="na">geo=</span><span class="s">&quot;true&quot;</span> <span class="na">distErrPct=</span><span class="s">&quot;0.025&quot;</span> <span class="na">maxDistErr=</span><span class="s">&quot;0.001&quot;</span> <span class="na">distanceUnits=</span><span class="s">&quot;kilometers&quot;</span> <span class="nt">/&gt;</span>

    <span class="c">&lt;!-- A Geohash is a compact representation of a latitude longitude pair in a single field.</span>
<span class="c">       See http://wiki.apache.org/solr/SpatialSearch</span>
<span class="c">     --&gt;</span>
    <span class="nt">&lt;fieldtype</span> <span class="na">name=</span><span class="s">&quot;geohash&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.GeoHashField&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Spatial rectangle (bounding box) field. It supports most spatial predicates, and has</span>
<span class="c">   special relevancy modes: score=overlapRatio|area|area2D (local-param to the query).  DocValues is recommended for</span>
<span class="c">   relevancy. --&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;bbox&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.BBoxField&quot;</span>
               <span class="na">geo=</span><span class="s">&quot;true&quot;</span> <span class="na">distanceUnits=</span><span class="s">&quot;kilometers&quot;</span> <span class="na">numberType=</span><span class="s">&quot;_bbox_coord&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;_bbox_coord&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.DoublePointField&quot;</span> <span class="na">docValues=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType</span>
<span class="c">       Parameters:</span>
<span class="c">           amountLongSuffix: Required. Refers to a dynamic field for the raw amount sub-field.</span>
<span class="c">                               The dynamic field must have a field type that extends LongValueFieldType.</span>
<span class="c">                               Note: If you expect to use Atomic Updates, this dynamic field may not be stored.</span>
<span class="c">           codeStrSuffix:    Required. Refers to a dynamic field for the currency code sub-field.</span>
<span class="c">                               The dynamic field must have a field type that extends StrField.</span>
<span class="c">                               Note: If you expect to use Atomic Updates, this dynamic field may not be stored.</span>
<span class="c">           defaultCurrency:  Specifies the default currency if none specified. Defaults to &quot;USD&quot;</span>
<span class="c">           providerClass:    Lets you plug in other exchange provider backend:</span>
<span class="c">                             solr.FileExchangeRateProvider is the default and takes one parameter:</span>
<span class="c">                               currencyConfig: name of an xml file holding exchange rates</span>
<span class="c">                             solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:</span>
<span class="c">                               ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)</span>
<span class="c">                               refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)</span>
<span class="c">  --&gt;</span>
<span class="c">&lt;!--  &lt;fieldType name=&quot;currency&quot; class=&quot;solr.CurrencyFieldType&quot; amountLongSuffix=&quot;_l_ns&quot; codeStrSuffix=&quot;_s_ns&quot;</span>
<span class="c">                 defaultCurrency=&quot;USD&quot; currencyConfig=&quot;currency.xml&quot; /&gt; --&gt;</span>

  <span class="c">&lt;!-- Following is a dynamic way to include other fields, added by other contrib modules --&gt;</span>
  <span class="ni">&amp;extrafields;</span>

  <span class="c">&lt;!-- Following is a dynamic way to include other types, added by other contrib modules --&gt;</span>
  <span class="ni">&amp;extratypes;</span>

  <span class="c">&lt;!-- Field to use to determine and enforce document uniqueness.</span>
<span class="c">       Unless this field is marked with required=&quot;false&quot;, it will be a required field</span>
<span class="c">    --&gt;</span>
  <span class="nt">&lt;uniqueKey&gt;</span>id<span class="nt">&lt;/uniqueKey&gt;</span>

  <span class="c">&lt;!-- Similarity is the scoring routine for each document vs. a query.</span>
<span class="c">       A custom Similarity or SimilarityFactory may be specified here, but</span>
<span class="c">       the default is fine for most applications.</span>
<span class="c">       For more info: http://wiki.apache.org/solr/SchemaXml#Similarity</span>
<span class="c">    --&gt;</span>
  <span class="c">&lt;!--</span>
<span class="c">     &lt;similarity class=&quot;com.example.solr.CustomSimilarityFactory&quot;&gt;</span>
<span class="c">       &lt;str name=&quot;paramkey&quot;&gt;param value&lt;/str&gt;</span>
<span class="c">     &lt;/similarity&gt;</span>
<span class="c">    --&gt;</span>

<span class="nt">&lt;/schema&gt;</span>
</pre></div>
</code></pre></td></tr></table>
</div> <!-- class=content -->
<div class='footer'>generated by <a href='https://git.zx2c4.com/cgit/about/'>cgit v1.1</a> at 2017-10-31 13:42:15 +0000</div>
</div> <!-- id=cgit -->
</body>
</html>
