#!/usr/bin/env bash

export PLAYBOOK="ansible-playbook -i ${DIR}/orchestration/hosts --user=${USER} ${DIR}/orchestration"
export EXTRA_VARS="--extra-vars ansible_sudo_pass=${USER}"

drupal_dev_mode() {
  echo -e "${BLUE}Configuring Drupal for development...${COLOR_ENDING}"
  ${PLAYBOOK}/dev.yml --extra-vars "ansible_sudo_pass=${USER} dev=Y"
}

drupal_prod_mode() {
  echo -e "${BLUE}Configuring Drupal for production...${COLOR_ENDING}"
  ${PLAYBOOK}/prod.yml --extra-vars "ansible_sudo_pass=${USER} prod=Y"
}

import_site() {
  echo -e "${BLUE}Importing site into new docroot ${SITENAME}...${COLOR_ENDING}"
  ${PLAYBOOK}/import.yml --extra-vars "ansible_sudo_pass=${USER} import=Y sitename=${SITENAME}"
}

reinstall_drupal() {
  echo -e "${BLUE}Reinstalling Drupal...${COLOR_ENDING}"
  ${PLAYBOOK}/reinstall.yml --extra-vars "ansible_sudo_pass=${USER} reinstall=Y"
}

delete_site() {
  echo -e "${BLUE}Deleting docroot ${SITENAME}...${COLOR_ENDING}"
  ${PLAYBOOK}/delete.yml --extra-vars "ansible_sudo_pass=${USER} delete=Y sitename=${SITENAME}"
  echo -e "${RED}Remember to remove the ${SITENAME}.local entry from your local /etc/hosts file!${COLOR_ENDING}"
}

create_site() {
  if [[ -d ${LOCAL_HTML_PATH}/${SITENAME} ]]; then
    read -p "The ${SITENAME} docroot already exists. Should we overwrite the codebase, files and database? [Y/n] "
    if [[ ${REPLY} =~ ^[Nn]$ ]]; then
      echo -e "${GREEN}Back to the comfort zone. Aborting.${COLOR_ENDING}"
      exit 0
    elif [[ ! ${REPLY} =~ ^[Yy]$ ]]; then
      echo "Sorry, the only accepted input characters are [Yy/Nn]. Aborting..."
      exit 0
    else
      delete_site
      create_site
    fi
  else
    if [[ -z "${GIT_TAG}" ]]; then
      echo -e "${BLUE}Creating site into new ${SITENAME} docroot...${COLOR_ENDING}"
      ${PLAYBOOK}/create.yml --extra-vars "ansible_sudo_pass=${USER} create=Y sitename=${SITENAME}"
      echo -e "${RED}Remember to add the ${SITENAME}.local entry to your local /etc/hosts file!${COLOR_ENDING}"
    else
      export GIT_TAGS=($(docker exec ${WEB_CONTAINER} ${GIT_EXECUTABLE} -C ${DRUPAL_REPO} tag -l))

      if [[ " ${GIT_TAGS[*]} " == *" ${GIT_TAG} "* ]]; then
        echo -e "${BLUE}Creating Drupal ${GIT_TAG} site into new ${SITENAME} docroot...${COLOR_ENDING}"
        ${PLAYBOOK}/create-tag.yml --extra-vars "ansible_sudo_pass=${USER} create=Y   sitename=${SITENAME} git_tag=${GIT_TAG}"
        echo -e "${RED}Remember to add the ${SITENAME}.local entry to your local /etc/hosts file!${COLOR_ENDING}"
      else
        drucker_usage
      fi
    fi
  fi
}

run_tests() {
  echo -e "${BLUE}Running the system test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/system-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the reverse proxy test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/reverse-proxy-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the database test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/db-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the web test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/web-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the search test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/search-tests.yml ${EXTRA_VARS}
}

run_base_container_orchestration() {
  echo -e "${BLUE}Running ${BASE_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/base.yml ${EXTRA_VARS}
}

run_reverse_proxy_container_orchestration() {
  echo -e "${BLUE}Running ${REVERSE_PROXY_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/reverse_proxy.yml ${EXTRA_VARS}
}

run_web_container_orchestration() {
  echo -e "${BLUE}Running ${WEB_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/web.yml ${EXTRA_VARS}
}

run_db_container_orchestration() {
  echo -e "${BLUE}Running ${DB_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/db.yml ${EXTRA_VARS}
}

run_search_container_orchestration() {
  echo -e "${BLUE}Running ${SEARCH_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/search.yml ${EXTRA_VARS}
}

run_gluster_setup_container_orchestration() {
  echo -e "${BLUE}Running GlusterFS orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/gluster-setup.yml ${EXTRA_VARS}
}

run_web2_container_orchestration() {
  echo -e "${BLUE}Running ${WEB_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/web2.yml ${EXTRA_VARS}

  run_gluster_setup_container_orchestration
}
