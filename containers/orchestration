#!/usr/bin/env bash

export PLAYBOOK="ansible-playbook -i ${DIR}/orchestration/hosts --user=${USER} ${DIR}/orchestration"
export EXTRA_VARS="--extra-vars ansible_sudo_pass=${USER}"

run_tests() {
  echo -e "${BLUE}Running the system test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/system-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the reverse proxy test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/reverse-proxy-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the database test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/db-tests.yml ${EXTRA_VARS}

  echo -e "${BLUE}Running the web test suite...${COLOR_ENDING}"
  ${PLAYBOOK}/web-tests.yml ${EXTRA_VARS}
}

run_base_container_orchestration() {
  echo -e "${BLUE}Running ${BASE_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/base.yml ${EXTRA_VARS}
}

run_reverse_proxy_container_orchestration() {
  echo -e "${BLUE}Running ${REVERSE_PROXY_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/reverse_proxy.yml ${EXTRA_VARS}
}

run_web_container_orchestration() {
  echo -e "${BLUE}Running ${WEB_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  if [[ -n "$OPTION" ]]; then
    case "$OPTION" in
      --dev)
      ${PLAYBOOK}/web.yml --extra-vars "ansible_sudo_pass=${USER} dev=Y prod=N reinstall=N delete=N import=N"
      ;;
      --prod)
      ${PLAYBOOK}/web.yml --extra-vars "ansible_sudo_pass=${USER} prod=Y dev=N reinstall=N delete=N import=N"
      ;;
      --reinstall)
      ${PLAYBOOK}/web.yml --extra-vars "ansible_sudo_pass=${USER} reinstall=Y dev=N prod=N delete=N import=N"
      ;;
      --import)
      ${PLAYBOOK}/web.yml --extra-vars "ansible_sudo_pass=${USER} import=Y dev=N prod=N reinstall=N delete=N sitename=${SITENAME}"
      ;;
      --delete)
      ${PLAYBOOK}/web.yml --extra-vars "ansible_sudo_pass=${USER} delete=Y dev=N prod=N reinstall=N import=N sitename=${SITENAME}"
      ;;
    esac
  else
    ${PLAYBOOK}/web.yml --extra-vars "ansible_sudo_pass=${USER} dev=N prod=N reinstall=N delete=N import=N"
  fi
}

run_db_container_orchestration() {
  echo -e "${BLUE}Running ${DB_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/db.yml ${EXTRA_VARS}
}

run_search_container_orchestration() {
  echo -e "${BLUE}Running ${SEARCH_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/search.yml ${EXTRA_VARS}
}

run_gluster_setup_container_orchestration() {
  echo -e "${BLUE}Running GlusterFS orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/gluster-setup.yml ${EXTRA_VARS}
}

run_web2_container_orchestration() {
  echo -e "${BLUE}Running ${WEB_CONTAINER} orchestration on the container...${COLOR_ENDING}"

  ${PLAYBOOK}/web2.yml ${EXTRA_VARS}

  run_gluster_setup_container_orchestration
}
