#!/usr/bin/env bash

SEARCH_IMAGE_EXISTS=$(docker images | awk '{print $1":"$2}' | grep "${SEARCH_IMAGE}")
SEARCH_CONTAINER_STARTED=$(docker ps | grep -o "${SEARCH_CONTAINER}")

build_search_image() {
  if [[ ${SEARCH_IMAGE_EXISTS} ]]; then
    echo -e "${GREEN}${SEARCH_IMAGE} image already exists.${COLOR_ENDING}"
  else
    if [[ ! ${SEARCH_IMAGE_EXISTS} ]]; then
      echo -e "${BLUE}Building ${SEARCH_IMAGE} image from Dockerfile...${COLOR_ENDING}"
      # Make sure the Docker build context doesn't get in the way.
      cd "$( dirname "${BASH_SOURCE[0]}" )" && cd solr
      docker build -t "${SEARCH_IMAGE}" .
    fi
  fi
}

create_search_container_from_search_image() {
  echo -e "${BLUE}Spinning up ${SEARCH_CONTAINER} container with ID:${COLOR_ENDING}"

  docker run --privileged=true --name "${SEARCH_CONTAINER}" -it \
  -h "${SEARCH_HOSTNAME}" \
  --net "${NETWORK}" \
  --ip "${SEARCH_IP}" \
  -d -p "${HOST_SEARCH_PORT}":"${SEARCH_PORT}" \
  "${SEARCH_IMAGE}" bash

  configure_search_container_ssh_access
  run_search_container_orchestration
}


start_search_container() {
  docker start "${SEARCH_CONTAINER}" > /dev/null 2>&1
}

provision_search_container() {
  if [[ ${SEARCH_CONTAINER_EXISTS} ]]; then
    echo -e "${GREEN}${SEARCH_CONTAINER} container already exists.${COLOR_ENDING}"

    if [[ ! ${SEARCH_CONTAINER_STARTED} ]]; then
      echo -e "${BLUE}Starting ${SEARCH_CONTAINER} container...${COLOR_ENDING}"
      start_search_container
      run_search_container_orchestration
    else
      run_search_container_orchestration
    fi
  else
    if [[ ${SEARCH_IMAGE_EXISTS} ]]; then
      create_search_container_from_search_image
    # else
    #   create_search_image_from_search_container
    fi
  fi
}
