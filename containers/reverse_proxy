#!/usr/bin/env bash

REVERSE_PROXY_CONTAINER_EXISTS=$(docker ps -a | grep -o "${REVERSE_PROXY_CONTAINER}")
REVERSE_PROXY_IMAGE_EXISTS=$(docker images | awk '{print $1":"$2}' | grep "${REVERSE_PROXY_IMAGE}")
REVERSE_PROXY_CONTAINER_STARTED=$(docker ps | grep -o "${REVERSE_PROXY_CONTAINER}")

create_reverse_proxy_image_from_reverse_proxy_container() {
  echo -e "${BLUE}Committing ${REVERSE_PROXY_IMAGE} image from ${REVERSE_PROXY_CONTAINER} container...${COLOR_ENDING}"

  docker commit -m "${REVERSE_PROXY_CONTAINER} on $(date +"%Y-%m-%d")" "${REVERSE_PROXY_CONTAINER}" "${REVERSE_PROXY_IMAGE}"

  docker restart "${REVERSE_PROXY_CONTAINER}"
}

create_reverse_proxy_container_from_reverse_proxy_image() {
  echo -e "${BLUE}Spinning up ${REVERSE_PROXY_CONTAINER} container with ID:${COLOR_ENDING}"

  docker run --privileged=true --name "${REVERSE_PROXY_CONTAINER}" -it \
  -h "${REVERSE_PROXY_HOSTNAME}" \
  --net "${NETWORK}" \
  --ip "${REVERSE_PROXY_IP}" \
  -d -p "${REVERSE_PROXY_PORT}":"${REVERSE_PROXY_PORT}" \
  "${REVERSE_PROXY_IMAGE}" bash

  configure_reverse_proxy_ssh_access
  run_reverse_proxy_container_orchestration
}

create_reverse_proxy_container_from_base_image() {
  echo -e "${BLUE}Spinning up ${REVERSE_PROXY_CONTAINER} container with ID:${COLOR_ENDING}"

  docker run --privileged=true --name "${REVERSE_PROXY_CONTAINER}" -it \
  -h "${REVERSE_PROXY_HOSTNAME}" \
  --net "${NETWORK}" \
  --ip "${REVERSE_PROXY_IP}" \
  -d -p "${REVERSE_PROXY_PORT}":"${REVERSE_PROXY_PORT}" \
  "${BASE_IMAGE}" bash

  configure_reverse_proxy_ssh_access
  run_reverse_proxy_container_orchestration
}

start_reverse_proxy_container() {
  docker start "${REVERSE_PROXY_CONTAINER}" > /dev/null 2>&1
}

provision_reverse_proxy_container() {
  if [[ ${REVERSE_PROXY_CONTAINER_EXISTS} ]]; then
    echo -e "${GREEN}${REVERSE_PROXY_CONTAINER} container already exists.${COLOR_ENDING}"

    if [[ ! ${REVERSE_PROXY_CONTAINER_STARTED} ]]; then
      echo -e "${BLUE}Starting ${REVERSE_PROXY_CONTAINER} container...${COLOR_ENDING}"
      start_reverse_proxy_container
      run_reverse_proxy_container_orchestration
    else
      run_reverse_proxy_container_orchestration
    fi
  else
    if [[ ${REVERSE_PROXY_IMAGE_EXISTS} ]]; then
      echo -e "${GREEN}${REVERSE_PROXY_IMAGE} custom image already exists.${COLOR_ENDING}"
      create_reverse_proxy_container_from_reverse_proxy_image
    else
      create_reverse_proxy_container_from_base_image
      create_reverse_proxy_image_from_reverse_proxy_container
    fi
  fi
}
