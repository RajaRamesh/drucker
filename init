#!/usr/bin/env bash

load_function_files() {
  FUNCTION_DIR="functions"
  FUNCTION_FILES="local_setup containers_management helpers arguments"

  for FUNCTION_FILE in ${FUNCTION_FILES} ; do
    source "${DIR}/${FUNCTION_DIR}/${FUNCTION_FILE}"
  done
}

load_container_files() {
  CONTAINER_DIR="containers"
  CONTAINER_FILES="variables requirements init ssh orchestration mirror base reverse_proxy web db search"

  for CONTAINER_FILE in ${CONTAINER_FILES} ; do
    source "${DIR}/${CONTAINER_DIR}/${CONTAINER_FILE}"
  done
}

drucker_argument() {
  if [[ -n "${OPTION}" ]] && \
       [[ "${OPTION}" != "containers:health" ]] && \
       [[ "${OPTION}" != "containers:start" ]] && \
       [[ "${OPTION}" != "containers:stop" ]] && \
       [[ "${OPTION}" != "containers:restart" ]] && \
       [[ "${OPTION}" != "app:drupal" ]] && \
       [[ "${OPTION}" != "app:lightning" ]] && \
       [[ "${OPTION}" != "app:reservoir" ]] && \
       [[ "${OPTION}" != "app:blt" ]] && \
       [[ "${OPTION}" != "app:delete" ]] && \
       [[ "${OPTION}" != "app:import" ]] && \
       [[ "${OPTION}" != "app:dev" ]] && \
       [[ "${OPTION}" != "app:prod" ]] && \
       [[ "${OPTION}" != "version" ]] && \
       [[ "${OPTION}" != "tests" ]] && \
       [[ "${OPTION}" != "help" ]]; then
    usage
  else
    case "$OPTION" in
      containers:health)
      run_healthcheck
      ;;
      containers:start)
      if [[ "${OPTION}" == "containers:start" ]]; then
        start_containers
      fi
      ;;
      containers:stop)
      if [[ "${OPTION}" == "containers:stop" ]]; then
        stop_containers
        exit 0
      fi
      ;;
      containers:restart)
      if [[ "${OPTION}" == "containers:restart" ]]; then
        restart_containers
      fi
      ;;
      app:drupal)
      if [[ "${OPTION}" == "app:drupal" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]]  || [[ ${SITENAME} == *['!'@#\$%^\&*()_+-]* ]]; then
        validation
        usage
      else
        create_sites
      fi
      ;;
      app:lightning)
      # See validation() for details.
      if [[ "${OPTION}" == "app:lightning" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]] || [[ ${SITENAME} == *['!'@#\$%^\&*()_+-]* ]]; then
        validation
        usage
      else
        create_lightning_sites
      fi
      ;;
      app:reservoir)
      # See validation() for details.
      if [[ "${OPTION}" == "app:reservoir" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]] || [[ ${SITENAME} == *['!'@#\$%^\&*()_+-]* ]]; then
        validation
        usage
      else
        create_reservoir_sites
      fi
      ;;
      app:blt)
      if [[ "${OPTION}" == "app:blt" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]] || [[ ${SITENAME} == *['!'@#\$%^\&*()_+-]* ]]; then
        validation
        usage
      else
        create_blt_builds
      fi
      ;;
      app:delete)
      if [[ "${OPTION}" == "app:delete" ]] && [[ -z ${SITENAME} ]]; then
        usage
      else
        delete_sites
      fi
      ;;
      app:import)
      if [[ "${OPTION}" == "app:import" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]] || [[ ${SITENAME} == *['!'@#\$%^\&*()_+-]* ]]; then
        validation
        usage
      else
        import_sites
      fi
      ;;
      app:dev)
      if [[ "${OPTION}" == "app:dev" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]]; then
        usage
      else
        enable_dev_mode
      fi
      ;;
      app:prod)
      if [[ "${OPTION}" == "app:prod" ]] && [[ -z ${SITENAME} ]] || [[ ! ${SITENAME} =~ [^[:digit:]] ]]; then
        usage
      else
        enable_prod_mode
      fi
      ;;
      version)
      return_version
      exit 0
      ;;
      tests)
      if [[ "${OPTION}" == "tests" ]] && [[ ! -z ${SITENAME} ]]; then
        usage
        exit 0
      else
        run_tests
        exit 0
      fi
      ;;
      help)
      usage
      exit 0
      ;;
    esac
  fi
}
